main() {
  Execution directory: /Users/jakeimyak/Desktop/CSE5525/hw3-distrib/state/execs/42.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog
        698 statements
      } [1.6s, cum. 1.6s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/9r/g7b52jgj4xj154c8jnl19wq00000gn/T/tmpgpqvzg9c.dlog {
        Parsing /var/folders/9r/g7b52jgj4xj154c8jnl19wq00000gn/T/tmpgpqvzg9c.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(state(@),next_to(@,A),state(A)))))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(state(@),loc(A,@),river(A))))).
          _parse([query], answer(A,(population(@,A),state(@))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,riverid(mississippi)),traverse(A,@)))).
          _parse([query], <SOS>largestcapital@))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(population(@,A),state(@),next_to(@,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B)))))).
          _parse([query], traverse(@,A),const(A,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))).
          _parse([query], ,(state(@),next_to(@,A),const(A,stateid(texas)))))).
          _parse([query], answer(A,(@),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(@),next_to(@,A),state(A)))))).
          _parse([query], ,A,(state(A),next_to(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,sum(B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,riverid(mississippi)),traverse(A,@)))).
          _parse([query], answer(A,state(A),next_to(@,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B)))),?))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))).
          _parse([query], answer(A,(@),const(A,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))).
          _parse([query], desredmississippi))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas)),population(@,A))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(len(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], (A,(state(@),loc(A,@),city(A),loc(B,A),const(B,stateid(texas)))))).
          _parse([query], ,(city(@),loc(@,A),const(A,countryid(usa)))))).
          _parse([query], answer(A,(@),const(B,riverid(mississippi)),traverse(B,A))))).
          _parse([query], ,state(@),next_to(@,A),const(A,stateid(texas)))))).
          _parse([query], answer(A,state(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(len(B,A),const(B,stateid(texas)),population(@,A))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B))))).
          _parse([query], ,most(@,A,(state(@),next_to(@,A),state(A))))))).
          _parse([query], answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas)),population(@,A))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], traverse@,state(@)))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(@),const(A,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B)))))).
          _parse([query], ,state(@),next_to(@,A),state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas)))))).
          _parse([query], ,most(@,A,(state(@),next_to(@,A),state(A))))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas)),population(@,A))))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], ,state(@),next_to(@,A),const(A,stateid(texas))))).
          _parse([query], lenpopulation(?,@))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B)))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))).
          _parse([query], deathvalley=population(?),>))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], (city(@),loc(@,A),const(A,countryid(usa)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B)))))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], ,state(@),next_to(@,A),const(A,stateid(texas))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(population(@,A))))).
          _parse([query], answer(A,(density(@,A),loc(B,A),const(B,stateid(texas)))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A)))))).
          _parse([query], answer(A,(density(@,A),state(@),loc(@,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(@),const(A,stateid("new mexico"))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,riverid(mississippi),traverse(A,@),river(A))))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(texas)))))).
          _parse([query], ,state(@),next_to(@,A),state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(density(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(city(@),loc(A,@))))).
          _parse([query], answer(A,(state(@),loc(A,@),city(A))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(state(@),loc(A,@),city(A))))).
          _parse([query], answer(A,(state(@),next_to(@,A),state(@)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas)),population(@,A))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(state(@),loc(A,@),city(A))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(@),loc(A,@),city(A))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], traverse@,state(@)))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas)),population(@,A))))).
          _parse([query], answer(A,(population(@,A),state(@),population(@,A)))))).
          _parse([query], answer(A,(state(A),loc(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(population(@,A),state(@))))).
          _parse([query], answer(A,smallest(B,(state(A),loc(B,A),river(B),traverse(B,A)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], state(?),const(@,stateid(texas))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(density(B,A),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),next_to(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))).
          _parse([query], deathvalley=population(?,@)))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], ,longest(@,(river(@),traverse(@,A),const(A,stateid(texas)))))).
          _parse([query], (A,(river(@),loc(A,@))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], ,state(@),next_to(@,A),const(A,stateid(texas)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B)))))).
          _parse([query], answer(A,state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(@),const(A,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))),@))).
          _parse([query], ,highest(A,(state(@),loc(A,@),river(A)))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B)))))).
          _parse([query], answer(A,(state(@),next_to(@,A),state(@)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas)))))).
          _parse([query], ,most(@,A,(state(@),next_to(@,A),state(A))))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(len(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], state(@),loc(A,@),const(A,stateid(texas))))).
          _parse([query], answer(A,(state(@),density(@,A)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(population(@,A),state(@),const(B,riverid(mississippi)),traverse(B,A))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,@),const(A,stateid("new mexico"))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(elevation(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], deathvalley=population(?),>))).
          _parse([query], ,(state(@),next_to(@,A),state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(population(@,A),state(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(@),loc(A,@),river(A)))))).
          _parse([query], answer(A,(@),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),traverse(B,A)))).
          _parse([query], answer(A,smallest(B,(state(A),next_to(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(len(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], vermontcountriograndefrancisco=desmoines"des moines")),river(@)))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,riverid(mississippi),traverse(A,@))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,@),const(A,stateid("new mexico"))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(elevation(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(state(@),next_to(@,A),state(@))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(len(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,(elevation(B,A),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,sum(B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,(state(A),next_to(@,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(population(@,A),loc(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(austin,_))))).
          _parse([query], statestate(?),const(@,cityid(austin,_))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),loc(C,B),const(C,riverid(mississippi)),river(C))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))).
          _parse([query], answer(A,riverid(mississippi),traverse(A,@),river(A))))).
          _parse([query], longest(@,river(@))))).
          _parse([query], answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(population(@,A),state(@),next_to(@,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(@),next_to(@,A),state(A)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,@),const(A,stateid("new mexico"))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),loc(C,B),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], ,state(@),next_to(@,A),const(A,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(density(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], ,(city(@),loc(@,A),const(A,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], ,state(@)),next_to(@,A),const(A,stateid(texas))))).
          _parse([query], answer(A,(state(@),next_to(@,A),state(@),next_to(@,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,sum(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(population(@,A))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(river(@),traverse(@,A),state(A)))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(elevation(B,A),city(B),loc(B,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(population(@,A),state(@),next_to(@,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,riverid(mississippi)),river(B)))).
          _parse([query], ,most(@,A,(state(@),next_to(@,A),state(A))))))).
          _parse([query], answer(A,(density(@,A),state(@),next_to(@,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(@,A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,@),const(A,stateid("new mexico"))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], deathvalleyA,state(A)))).
          _parse([query], answer(A,(elevation(B,A),const(B,stateid(texas))),@))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),loc(C,B),const(C,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas)),population(@,A))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(population(@,A),state(@))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(texas))),A))).
          DatalogParser.loadSafe(): end
        }
        560 statements
        Example tmpgpqvzg9c.dlog:0: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:1: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:2: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:3: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:4: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:5: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:6: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:7: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:8: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:9: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:10: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:11: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:12: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:13: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:14: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:15: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:16: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:17: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:18: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:19: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:20: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:21: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:22: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:23: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:24: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:25: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:26: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:27: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:28: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:29: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:30: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:31: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:32: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:33: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:34: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:35: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:36: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:37: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:38: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:39: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:40: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:41: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:42: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:43: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:44: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:45: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:46: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:47: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:48: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:49: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:50: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:51: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:52: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:53: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:54: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:55: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:56: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:57: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:58: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:59: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:60: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:61: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:62: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:63: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:64: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:65: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:66: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:67: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:68: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:69: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:70: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:71: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:72: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:73: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:74: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:75: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:76: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:77: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:78: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:79: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:80: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:81: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:82: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:83: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:84: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:85: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:86: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:87: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:88: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:89: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:90: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:91: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:92: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:93: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:94: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:95: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:96: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:97: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:98: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:99: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:100: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:101: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:102: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:103: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:104: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:105: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:106: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:107: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:108: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:109: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:110: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:111: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:112: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:113: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:114: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:115: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:116: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:117: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:118: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:119: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:120: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:121: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:122: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:123: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:124: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:125: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:126: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:127: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:128: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:129: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:130: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:131: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:132: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:133: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:134: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:135: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:136: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:137: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:138: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:139: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:140: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:141: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:142: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:143: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:144: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:145: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:146: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:147: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:148: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:149: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:150: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:151: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:152: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:153: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:154: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:155: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:156: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:157: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:158: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:159: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:160: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:161: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:162: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:163: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:164: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:165: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:166: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:167: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:168: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:169: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:170: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:171: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:172: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:173: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:174: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:175: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:176: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:177: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:178: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:179: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:180: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:181: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:182: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:183: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:184: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:185: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:186: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:187: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:188: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:189: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:190: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:191: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:192: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:193: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:194: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:195: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:196: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:197: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:198: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:199: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:200: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:201: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:202: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:203: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:204: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:205: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:206: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:207: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:208: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:209: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:210: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:211: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:212: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:213: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:214: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:215: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:216: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:217: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:218: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:219: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:220: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:221: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:222: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:223: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:224: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:225: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:226: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:227: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:228: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:229: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:230: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:231: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:232: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:233: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:234: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:235: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:236: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:237: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:238: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:239: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:240: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:241: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:242: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:243: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:244: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:245: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:246: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:247: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:248: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:249: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:250: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:251: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:252: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:253: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:254: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:255: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:256: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:257: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:258: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:259: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:260: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:261: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:262: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:263: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:264: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:265: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:266: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:267: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:268: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:269: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:270: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:271: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:272: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:273: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:274: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:275: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:276: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:277: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:278: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgpqvzg9c.dlog:279: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:280: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(austin,_))))
        Example tmpgpqvzg9c.dlog:281: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpgpqvzg9c.dlog:282: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),loc(A,B),const(B,stateid(texas))))
        Example tmpgpqvzg9c.dlog:283: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:284: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:285: query => {[Join failed syntactically: {[mississippi:riverid/2]}:{[riverid/2]}[0] and {[columbia_sc:cityid/3],[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[pierre_sd:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),capital(B),const(B,riverid(mississippi)),river(B)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:286: query => {[Join failed syntactically: {[mississippi,mississippi:riverid/2,mississippi:riverid/2,wisconsin:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,iowa:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,usa:countryid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,arkansas:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,mississippi:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,minnesota:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,louisiana:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,kentucky:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,tennessee:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,missouri:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,illinois:stateid/2]}:{[length,riverid/2,riverid/2,stateid/2],[money,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,countryid/2],[date_month,riverid/2,riverid/2,countryid/2],[money,riverid/2,riverid/2,stateid/2],[rank,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,stateid/2],[name,riverid/2,riverid/2,countryid/2],[count/length^2,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,countryid/2],[date_year,riverid/2,riverid/2,countryid/2],[count,riverid/2,riverid/2,countryid/2],[name,riverid/2,riverid/2,stateid/2],[frac,riverid/2,riverid/2,stateid/2],[date_day,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,stateid/2],[length,riverid/2,riverid/2,countryid/2],[frac,riverid/2,riverid/2,countryid/2],[money/time_duration,riverid/2,riverid/2,stateid/2],[count,riverid/2,riverid/2,stateid/2],[money/time_duration,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,countryid/2],[date_day,riverid/2,riverid/2,countryid/2],[rank,riverid/2,riverid/2,stateid/2],[date_month,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,stateid/2],[count/length^2,riverid/2,riverid/2,stateid/2],[date_year,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,countryid/2]}[3] and {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:287: query => {[920600count]} | answer(A,(population(B,A),const(B,stateid('new hampshire'))))
        Example FAILED TO EXECUTE
        Example tmpgpqvzg9c.dlog:289: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:290: query => {[iowa:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[virginia:stateid/2],[mississippi:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[wyoming:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[north carolina:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:291: query => {[Join failed syntactically: {[mississippi,mississippi:riverid/2,mississippi:riverid/2,wisconsin:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,iowa:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,usa:countryid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,arkansas:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,mississippi:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,minnesota:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,louisiana:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,kentucky:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,tennessee:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,missouri:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,illinois:stateid/2]}:{[length,riverid/2,riverid/2,stateid/2],[money,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,countryid/2],[date_month,riverid/2,riverid/2,countryid/2],[money,riverid/2,riverid/2,stateid/2],[rank,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,stateid/2],[name,riverid/2,riverid/2,countryid/2],[count/length^2,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,countryid/2],[date_year,riverid/2,riverid/2,countryid/2],[count,riverid/2,riverid/2,countryid/2],[name,riverid/2,riverid/2,stateid/2],[frac,riverid/2,riverid/2,stateid/2],[date_day,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,stateid/2],[length,riverid/2,riverid/2,countryid/2],[frac,riverid/2,riverid/2,countryid/2],[money/time_duration,riverid/2,riverid/2,stateid/2],[count,riverid/2,riverid/2,stateid/2],[money/time_duration,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,countryid/2],[date_day,riverid/2,riverid/2,countryid/2],[rank,riverid/2,riverid/2,stateid/2],[date_month,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,stateid/2],[count/length^2,riverid/2,riverid/2,stateid/2],[date_year,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,countryid/2]}[3] and {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:292: query => {[Join failed syntactically: {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[usa:countryid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]}:{[stateid/2],[countryid/2],[cityid/3]}[0] and {[colorado:riverid/2,2333000length],[wateree catawba:riverid/2,636000length],[san juan:riverid/2,579000length],[st. francis:riverid/2,684000length],[hudson:riverid/2,492000length],[gila:riverid/2,805000length],[powder:riverid/2,603000length],[neosho:riverid/2,740000length],[north platte:riverid/2,1094000length],[cimarron:riverid/2,965000length],[potomac:riverid/2,462000length],[ouachita:riverid/2,973000length],[tennessee:riverid/2,1049000length],[mississippi:riverid/2,3778000length],[canadian:riverid/2,1458000length],[arkansas:riverid/2,2333000length],[roanoke:riverid/2,660000length],[cumberland:riverid/2,1105000length],[green:riverid/2,1175000length],[republican:riverid/2,679000length],[little missouri:riverid/2,901000length],[wabash:riverid/2,764000length],[rio grande:riverid/2,3033000length],[yellowstone:riverid/2,1080000length],[tombigbee:riverid/2,658000length],[snake:riverid/2,1670000length],[washita:riverid/2,805000length],[rock:riverid/2,459000length],[delaware:riverid/2,451000length],[connecticut:riverid/2,655000length],[missouri:riverid/2,3968000length],[bighorn:riverid/2,541000length],[dakota:riverid/2,1142000length],[pecos:riverid/2,805000length],[cheyenne:riverid/2,848000length],[niobrara:riverid/2,693000length],[chattahoochee:riverid/2,702000length],[pearl:riverid/2,788000length],[clark fork:riverid/2,483000length],[red:riverid/2,1638000length],[white:riverid/2,1110000length],[columbia:riverid/2,1953000length],[ohio:riverid/2,1569000length],[allegheny:riverid/2,523000length],[south platte:riverid/2,682000length],[smoky hill:riverid/2,869000length]}:{[riverid/2,length]}[0] => {}:error]} | answer(A,(len(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:293: query => {[Join failed syntactically: {[mississippi:riverid/2]}:{[riverid/2]}[0] and {[columbia_sc:cityid/3],[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[pierre_sd:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),capital(B),const(B,riverid(mississippi)),river(B)))
        Example tmpgpqvzg9c.dlog:294: query => {} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),loc(B,C),const(C,stateid(texas))))
        Example tmpgpqvzg9c.dlog:295: query => {[new york:stateid/2]} | answer(A,largest(B,(state(A),loc(B,A),city(B))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:296: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example tmpgpqvzg9c.dlog:297: query => {[Join failed syntactically: {[texas,texas:stateid/2,texas:stateid/2,arkansas:stateid/2,usa:countryid/2],[texas,texas:stateid/2,texas:stateid/2,louisiana:stateid/2,usa:countryid/2],[texas,texas:stateid/2,texas:stateid/2,new mexico:stateid/2,usa:countryid/2],[texas,texas:stateid/2,texas:stateid/2,oklahoma:stateid/2,usa:countryid/2]}:{[date_day,stateid/2,stateid/2,stateid/2,countryid/2],[time_duration,stateid/2,stateid/2,stateid/2,countryid/2],[money/time_duration,stateid/2,stateid/2,stateid/2,countryid/2],[length^2,stateid/2,stateid/2,stateid/2,countryid/2],[count/length^2,stateid/2,stateid/2,stateid/2,countryid/2],[date_month,stateid/2,stateid/2,stateid/2,countryid/2],[date,stateid/2,stateid/2,stateid/2,countryid/2],[name,stateid/2,stateid/2,stateid/2,countryid/2],[money,stateid/2,stateid/2,stateid/2,countryid/2],[frac,stateid/2,stateid/2,stateid/2,countryid/2],[date_year,stateid/2,stateid/2,stateid/2,countryid/2],[rank,stateid/2,stateid/2,stateid/2,countryid/2],[length,stateid/2,stateid/2,stateid/2,countryid/2],[date_time,stateid/2,stateid/2,stateid/2,countryid/2],[count,stateid/2,stateid/2,stateid/2,countryid/2]}[4] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,largest(B,(state(A),loc(B,A),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:298: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:301: query => {[utah:stateid/2],[mississippi:stateid/2],[colorado:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:304: query => {[Join failed syntactically: {[mississippi,mississippi:riverid/2,mississippi:riverid/2,wisconsin:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,iowa:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,usa:countryid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,arkansas:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,mississippi:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,minnesota:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,louisiana:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,kentucky:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,tennessee:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,missouri:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,illinois:stateid/2]}:{[length,riverid/2,riverid/2,stateid/2],[money,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,countryid/2],[date_month,riverid/2,riverid/2,countryid/2],[money,riverid/2,riverid/2,stateid/2],[rank,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,stateid/2],[name,riverid/2,riverid/2,countryid/2],[count/length^2,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,countryid/2],[date_year,riverid/2,riverid/2,countryid/2],[count,riverid/2,riverid/2,countryid/2],[name,riverid/2,riverid/2,stateid/2],[frac,riverid/2,riverid/2,stateid/2],[date_day,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,stateid/2],[length,riverid/2,riverid/2,countryid/2],[frac,riverid/2,riverid/2,countryid/2],[money/time_duration,riverid/2,riverid/2,stateid/2],[count,riverid/2,riverid/2,stateid/2],[money/time_duration,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,countryid/2],[date_day,riverid/2,riverid/2,countryid/2],[rank,riverid/2,riverid/2,stateid/2],[date_month,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,stateid/2],[count/length^2,riverid/2,riverid/2,stateid/2],[date_year,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,countryid/2]}[3] and {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:305: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpgpqvzg9c.dlog:306: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:307: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:308: query => {[14229000count]} | answer(A,(population(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:309: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpgpqvzg9c.dlog:310: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:311: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:312: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:313: query => {[louisiana:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))
        Example tmpgpqvzg9c.dlog:314: query => {[1.66e-05count/length^2],[1.86e-05count/length^2],[2.04e-05count/length^2],[3.40e-05count/length^2],[2.72e-05count/length^2],[7.82e-05count/length^2],[3.23e-05count/length^2],[4.21e-05count/length^2],[1.11e-05count/length^2],[2.00e-05count/length^2]} | answer(A,(density(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:315: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:316: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:317: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpgpqvzg9c.dlog:318: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpgpqvzg9c.dlog:319: query => {[utah:stateid/2],[mississippi:stateid/2],[colorado:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:320: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example tmpgpqvzg9c.dlog:321: query => {[Join failed syntactically: {[texas,texas:stateid/2,texas:stateid/2,arkansas:stateid/2,2286000count],[texas,texas:stateid/2,texas:stateid/2,new mexico:stateid/2,1303000count],[texas,texas:stateid/2,texas:stateid/2,louisiana:stateid/2,4206000count],[texas,texas:stateid/2,texas:stateid/2,oklahoma:stateid/2,3025000count]}:{[length^2,stateid/2,stateid/2,stateid/2,count],[date_time,stateid/2,stateid/2,stateid/2,count],[date_day,stateid/2,stateid/2,stateid/2,count],[date_month,stateid/2,stateid/2,stateid/2,count],[date,stateid/2,stateid/2,stateid/2,count],[money,stateid/2,stateid/2,stateid/2,count],[name,stateid/2,stateid/2,stateid/2,count],[count,stateid/2,stateid/2,stateid/2,count],[rank,stateid/2,stateid/2,stateid/2,count],[length,stateid/2,stateid/2,stateid/2,count],[count/length^2,stateid/2,stateid/2,stateid/2,count],[money/time_duration,stateid/2,stateid/2,stateid/2,count],[time_duration,stateid/2,stateid/2,stateid/2,count],[date_year,stateid/2,stateid/2,stateid/2,count],[frac,stateid/2,stateid/2,stateid/2,count]}[3,4] and {[ohio:riverid/2,west virginia:stateid/2],[usa:countryid/2,connecticut:riverid/2],[iowa:stateid/2,minnesota:stateid/2],[wabash:riverid/2,indiana:stateid/2],[kentucky:stateid/2,cumberland:riverid/2],[smoky hill:riverid/2,colorado:stateid/2],[michigan:stateid/2,ohio:stateid/2],[new mexico:stateid/2,texas:stateid/2],[utah:stateid/2,colorado:stateid/2],[kansas:stateid/2,cimarron:riverid/2],[north dakota:stateid/2,missouri:riverid/2],[arkansas:stateid/2,white:riverid/2],[tennessee:riverid/2,usa:countryid/2],[kentucky:stateid/2,illinois:stateid/2],[usa:countryid/2,tennessee:riverid/2],[oklahoma:stateid/2,colorado:stateid/2],[niobrara:riverid/2,nebraska:stateid/2],[utah:stateid/2,san juan:riverid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[california:stateid/2,arizona:stateid/2],[green:riverid/2,wyoming:stateid/2],[new york:stateid/2,new jersey:stateid/2],[usa:countryid/2,dakota:riverid/2],[louisiana:stateid/2,arkansas:stateid/2],[colorado:riverid/2,nevada:stateid/2],[new york:stateid/2,pennsylvania:stateid/2],[usa:countryid/2,cimarron:riverid/2],[oregon:stateid/2,idaho:stateid/2],[wyoming:stateid/2,idaho:stateid/2],[colorado:stateid/2,north platte:riverid/2],[louisiana:stateid/2,ouachita:riverid/2],[pecos:riverid/2,new mexico:stateid/2],[south carolina:stateid/2,georgia:stateid/2],[vermont:stateid/2,connecticut:riverid/2],[arizona:stateid/2,nevada:stateid/2],[usa:countryid/2,gila:riverid/2],[kentucky:stateid/2,ohio:stateid/2],[nebraska:stateid/2,wyoming:stateid/2],[kansas:stateid/2,nebraska:stateid/2],[tennessee:stateid/2,georgia:stateid/2],[arkansas:stateid/2,mississippi:riverid/2],[san juan:riverid/2,usa:countryid/2],[illinois:stateid/2,missouri:stateid/2],[louisiana:stateid/2,texas:stateid/2],[wyoming:stateid/2,montana:stateid/2],[arizona:stateid/2,colorado:riverid/2],[michigan:stateid/2,indiana:stateid/2],[little missouri:riverid/2,south dakota:stateid/2],[illinois:stateid/2,mississippi:riverid/2],[rio grande:riverid/2,usa:countryid/2],[usa:countryid/2,green:riverid/2],[rock:riverid/2,usa:countryid/2],[district of columbia:stateid/2,potomac:riverid/2],[missouri:riverid/2,montana:stateid/2],[usa:countryid/2,republican:riverid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[washington:stateid/2,oregon:stateid/2],[kentucky:stateid/2,indiana:stateid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[colorado:stateid/2,arizona:stateid/2],[missouri:stateid/2,st. francis:riverid/2],[arkansas:riverid/2,usa:countryid/2],[usa:countryid/2,st. francis:riverid/2],[new mexico:stateid/2,rio grande:riverid/2],[utah:stateid/2,new mexico:stateid/2],[massachusetts:stateid/2,vermont:stateid/2],[indiana:stateid/2,ohio:riverid/2],[tombigbee:riverid/2,mississippi:stateid/2],[kentucky:stateid/2,virginia:stateid/2],[new mexico:stateid/2,cimarron:riverid/2],[alabama:stateid/2,florida:stateid/2],[ohio:stateid/2,wabash:riverid/2],[tennessee:stateid/2,cumberland:riverid/2],[potomac:riverid/2,maryland:stateid/2],[georgia:stateid/2,tennessee:stateid/2],[tennessee:stateid/2,arkansas:stateid/2],[pennsylvania:stateid/2,allegheny:riverid/2],[snake:riverid/2,usa:countryid/2],[pennsylvania:stateid/2,ohio:stateid/2],[alabama:stateid/2,mississippi:stateid/2],[utah:stateid/2,arizona:stateid/2],[rhode island:stateid/2,massachusetts:stateid/2],[nebraska:stateid/2,missouri:riverid/2],[ohio:stateid/2,pennsylvania:stateid/2],[indiana:stateid/2,ohio:stateid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[wyoming:stateid/2,north platte:riverid/2],[nebraska:stateid/2,south platte:riverid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[pennsylvania:stateid/2,new jersey:stateid/2],[massachusetts:stateid/2,new hampshire:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[new york:stateid/2,massachusetts:stateid/2],[nevada:stateid/2,arizona:stateid/2],[new jersey:stateid/2,new york:stateid/2],[wyoming:stateid/2,little missouri:riverid/2],[missouri:stateid/2,missouri:riverid/2],[iowa:stateid/2,illinois:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[usa:countryid/2,cheyenne:riverid/2],[potomac:riverid/2,west virginia:stateid/2],[usa:countryid/2,clark fork:riverid/2],[connecticut:riverid/2,new hampshire:stateid/2],[new jersey:stateid/2,delaware:riverid/2],[alabama:stateid/2,tennessee:riverid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[alabama:stateid/2,tennessee:stateid/2],[kansas:stateid/2,oklahoma:stateid/2],[new mexico:stateid/2,colorado:stateid/2],[connecticut:stateid/2,connecticut:riverid/2],[canadian:riverid/2,colorado:stateid/2],[usa:countryid/2,missouri:riverid/2],[montana:stateid/2,yellowstone:riverid/2],[tennessee:stateid/2,alabama:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[texas:stateid/2,new mexico:stateid/2],[oregon:stateid/2,washington:stateid/2],[republican:riverid/2,usa:countryid/2],[massachusetts:stateid/2,new york:stateid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[new jersey:stateid/2,pennsylvania:stateid/2],[wyoming:stateid/2,colorado:stateid/2],[missouri:riverid/2,missouri:stateid/2],[montana:stateid/2,powder:riverid/2],[south dakota:stateid/2,minnesota:stateid/2],[arizona:stateid/2,colorado:stateid/2],[texas:stateid/2,oklahoma:stateid/2],[nevada:stateid/2,colorado:riverid/2],[usa:countryid/2,san juan:riverid/2],[oregon:stateid/2,columbia:riverid/2],[cumberland:riverid/2,kentucky:stateid/2],[new mexico:stateid/2,oklahoma:stateid/2],[north carolina:stateid/2,georgia:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[oklahoma:stateid/2,arkansas:stateid/2],[massachusetts:stateid/2,connecticut:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[usa:countryid/2,ouachita:riverid/2],[republican:riverid/2,colorado:stateid/2],[texas:stateid/2,red:riverid/2],[north dakota:stateid/2,little missouri:riverid/2],[south dakota:stateid/2,north dakota:stateid/2],[maryland:stateid/2,virginia:stateid/2],[alabama:stateid/2,tombigbee:riverid/2],[indiana:stateid/2,kentucky:stateid/2],[kentucky:stateid/2,ohio:riverid/2],[idaho:stateid/2,washington:stateid/2],[connecticut:stateid/2,new york:stateid/2],[little missouri:riverid/2,montana:stateid/2],[delaware:stateid/2,pennsylvania:stateid/2],[red:riverid/2,arkansas:stateid/2],[montana:stateid/2,clark fork:riverid/2],[arizona:stateid/2,utah:stateid/2],[texas:stateid/2,rio grande:riverid/2],[california:stateid/2,nevada:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[tennessee:stateid/2,tennessee:riverid/2],[arkansas:stateid/2,missouri:stateid/2],[colorado:stateid/2,rio grande:riverid/2],[colorado:stateid/2,colorado:riverid/2],[usa:countryid/2,arkansas:riverid/2],[idaho:stateid/2,montana:stateid/2],[wyoming:stateid/2,utah:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[usa:countryid/2,delaware:riverid/2],[missouri:stateid/2,illinois:stateid/2],[ohio:riverid/2,indiana:stateid/2],[arkansas:stateid/2,red:riverid/2],[oklahoma:stateid/2,canadian:riverid/2],[colorado:stateid/2,smoky hill:riverid/2],[illinois:stateid/2,ohio:riverid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[georgia:stateid/2,south carolina:stateid/2],[oregon:stateid/2,california:stateid/2],[tennessee:riverid/2,kentucky:stateid/2],[arizona:stateid/2,california:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[nebraska:stateid/2,south dakota:stateid/2],[louisiana:stateid/2,mississippi:riverid/2],[new mexico:stateid/2,red:riverid/2],[arizona:stateid/2,gila:riverid/2],[iowa:stateid/2,missouri:stateid/2],[utah:stateid/2,nevada:stateid/2],[oklahoma:stateid/2,red:riverid/2],[nebraska:stateid/2,kansas:stateid/2],[mississippi:stateid/2,louisiana:stateid/2],[usa:countryid/2,smoky hill:riverid/2],[usa:countryid/2,pecos:riverid/2],[georgia:stateid/2,north carolina:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[south dakota:stateid/2,little missouri:riverid/2],[washington:stateid/2,snake:riverid/2],[republican:riverid/2,nebraska:stateid/2],[wisconsin:stateid/2,mississippi:riverid/2],[neosho:riverid/2,usa:countryid/2],[montana:stateid/2,wyoming:stateid/2],[usa:countryid/2,little missouri:riverid/2],[indiana:stateid/2,wabash:riverid/2],[connecticut:stateid/2,massachusetts:stateid/2],[north carolina:stateid/2,roanoke:riverid/2],[kentucky:stateid/2,missouri:stateid/2],[colorado:stateid/2,utah:stateid/2],[usa:countryid/2,neosho:riverid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[south dakota:stateid/2,wyoming:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[idaho:stateid/2,oregon:stateid/2],[kentucky:stateid/2,west virginia:stateid/2],[columbia:riverid/2,oregon:stateid/2],[north dakota:stateid/2,minnesota:stateid/2],[niobrara:riverid/2,usa:countryid/2],[west virginia:stateid/2,ohio:stateid/2],[arkansas:stateid/2,texas:stateid/2],[maryland:stateid/2,potomac:riverid/2],[white:riverid/2,usa:countryid/2],[district of columbia:stateid/2,virginia:stateid/2],[texas:stateid/2,washita:riverid/2],[virginia:stateid/2,north carolina:stateid/2],[nebraska:stateid/2,colorado:stateid/2],[maryland:stateid/2,district of columbia:stateid/2],[rhode island:stateid/2,connecticut:stateid/2],[gila:riverid/2,new mexico:stateid/2],[colorado:stateid/2,republican:riverid/2],[pennsylvania:stateid/2,maryland:stateid/2],[new york:stateid/2,connecticut:stateid/2],[idaho:stateid/2,wyoming:stateid/2],[potomac:riverid/2,virginia:stateid/2],[arizona:stateid/2,new mexico:stateid/2],[indiana:stateid/2,illinois:stateid/2],[delaware:stateid/2,delaware:riverid/2],[missouri:stateid/2,nebraska:stateid/2],[snake:riverid/2,wyoming:stateid/2],[new york:stateid/2,vermont:stateid/2],[wisconsin:stateid/2,iowa:stateid/2],[north dakota:stateid/2,cheyenne:riverid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[west virginia:stateid/2,pennsylvania:stateid/2],[colorado:riverid/2,arizona:stateid/2],[usa:countryid/2,pearl:riverid/2],[massachusetts:stateid/2,rhode island:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[ohio:stateid/2,indiana:stateid/2],[minnesota:stateid/2,south dakota:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[connecticut:stateid/2,rhode island:stateid/2],[west virginia:stateid/2,virginia:stateid/2],[oklahoma:stateid/2,new mexico:stateid/2],[oklahoma:stateid/2,washita:riverid/2],[wisconsin:stateid/2,michigan:stateid/2],[kentucky:stateid/2,tennessee:riverid/2],[yellowstone:riverid/2,montana:stateid/2],[wisconsin:stateid/2,rock:riverid/2],[delaware:riverid/2,usa:countryid/2],[colorado:stateid/2,green:riverid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[idaho:stateid/2,snake:riverid/2],[colorado:stateid/2,south platte:riverid/2],[michigan:stateid/2,pearl:riverid/2],[dakota:riverid/2,usa:countryid/2],[new mexico:stateid/2,san juan:riverid/2],[delaware:riverid/2,new york:stateid/2],[north dakota:stateid/2,yellowstone:riverid/2],[dakota:riverid/2,south dakota:stateid/2],[tennessee:stateid/2,virginia:stateid/2],[potomac:riverid/2,usa:countryid/2],[minnesota:stateid/2,iowa:stateid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[wisconsin:stateid/2,minnesota:stateid/2],[new hampshire:stateid/2,connecticut:riverid/2],[utah:stateid/2,green:riverid/2],[usa:countryid/2,snake:riverid/2],[oklahoma:stateid/2,missouri:stateid/2],[nebraska:stateid/2,missouri:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[louisiana:stateid/2,red:riverid/2],[alabama:stateid/2,georgia:stateid/2],[michigan:stateid/2,wisconsin:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[iowa:stateid/2,mississippi:riverid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[arkansas:stateid/2,arkansas:riverid/2],[new hampshire:stateid/2,massachusetts:stateid/2],[ohio:stateid/2,michigan:stateid/2],[colorado:stateid/2,arkansas:riverid/2],[north dakota:stateid/2,dakota:riverid/2],[wisconsin:stateid/2,illinois:stateid/2],[wabash:riverid/2,ohio:stateid/2],[missouri:stateid/2,iowa:stateid/2],[texas:stateid/2,arkansas:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[minnesota:stateid/2,mississippi:riverid/2],[montana:stateid/2,idaho:stateid/2],[minnesota:stateid/2,north dakota:stateid/2],[illinois:stateid/2,indiana:stateid/2],[florida:stateid/2,alabama:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[tennessee:stateid/2,mississippi:stateid/2],[missouri:stateid/2,white:riverid/2],[new mexico:stateid/2,arizona:stateid/2],[south dakota:stateid/2,iowa:stateid/2],[louisiana:stateid/2,mississippi:stateid/2],[california:stateid/2,colorado:riverid/2],[mississippi:riverid/2,minnesota:stateid/2],[south dakota:stateid/2,montana:stateid/2],[mississippi:stateid/2,tennessee:stateid/2],[vermont:stateid/2,new york:stateid/2],[white:riverid/2,arkansas:stateid/2],[usa:countryid/2,colorado:riverid/2],[colorado:stateid/2,oklahoma:stateid/2],[idaho:stateid/2,utah:stateid/2],[colorado:stateid/2,nebraska:stateid/2],[usa:countryid/2,allegheny:riverid/2],[north dakota:stateid/2,montana:stateid/2],[san juan:riverid/2,colorado:stateid/2],[oklahoma:stateid/2,arkansas:riverid/2],[arkansas:stateid/2,mississippi:stateid/2],[kansas:stateid/2,missouri:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[arkansas:stateid/2,st. francis:riverid/2],[iowa:stateid/2,missouri:riverid/2],[pennsylvania:stateid/2,ohio:riverid/2],[connecticut:riverid/2,usa:countryid/2],[mississippi:stateid/2,tombigbee:riverid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[texas:stateid/2,louisiana:stateid/2],[new york:stateid/2,hudson:riverid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[new york:stateid/2,allegheny:riverid/2],[oklahoma:stateid/2,cimarron:riverid/2],[wyoming:stateid/2,niobrara:riverid/2],[tennessee:stateid/2,mississippi:riverid/2],[west virginia:stateid/2,potomac:riverid/2],[washita:riverid/2,oklahoma:stateid/2],[usa:countryid/2,bighorn:riverid/2],[west virginia:stateid/2,kentucky:stateid/2],[virginia:stateid/2,maryland:stateid/2],[virginia:stateid/2,roanoke:riverid/2],[mississippi:riverid/2,arkansas:stateid/2],[maryland:stateid/2,west virginia:stateid/2],[wyoming:stateid/2,bighorn:riverid/2],[pennsylvania:stateid/2,new york:stateid/2],[mississippi:stateid/2,alabama:stateid/2],[kansas:stateid/2,arkansas:riverid/2],[colorado:stateid/2,wyoming:stateid/2],[vermont:stateid/2,massachusetts:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[north carolina:stateid/2,tennessee:stateid/2],[arkansas:stateid/2,ouachita:riverid/2],[idaho:stateid/2,clark fork:riverid/2],[usa:countryid/2,rock:riverid/2],[wyoming:stateid/2,nebraska:stateid/2],[north dakota:stateid/2,south dakota:stateid/2],[usa:countryid/2,north platte:riverid/2],[pearl:riverid/2,michigan:stateid/2],[kentucky:stateid/2,tennessee:stateid/2],[montana:stateid/2,north dakota:stateid/2],[nevada:stateid/2,california:stateid/2],[usa:countryid/2,roanoke:riverid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[missouri:stateid/2,oklahoma:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[tennessee:stateid/2,kentucky:stateid/2],[usa:countryid/2,niobrara:riverid/2],[washington:stateid/2,idaho:stateid/2],[iowa:stateid/2,wisconsin:stateid/2],[utah:stateid/2,colorado:riverid/2],[ouachita:riverid/2,louisiana:stateid/2],[florida:stateid/2,georgia:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[arkansas:stateid/2,louisiana:stateid/2],[oklahoma:stateid/2,kansas:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[usa:countryid/2,south platte:riverid/2],[usa:countryid/2,red:riverid/2],[usa:countryid/2,columbia:riverid/2],[mississippi:riverid/2,louisiana:stateid/2],[iowa:stateid/2,south dakota:stateid/2],[pennsylvania:stateid/2,west virginia:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[austin_tx:cityid/3,colorado:riverid/2],[south carolina:stateid/2,wateree catawba:riverid/2],[allegheny:riverid/2,new york:stateid/2],[virginia:stateid/2,kentucky:stateid/2],[texas:stateid/2,canadian:riverid/2],[missouri:stateid/2,tennessee:stateid/2],[mississippi:stateid/2,mississippi:riverid/2],[columbia:riverid/2,washington:stateid/2],[usa:countryid/2,white:riverid/2],[colorado:stateid/2,canadian:riverid/2],[usa:countryid/2,potomac:riverid/2],[utah:stateid/2,idaho:stateid/2],[columbia:riverid/2,usa:countryid/2],[usa:countryid/2,wabash:riverid/2],[wabash:riverid/2,usa:countryid/2],[tennessee:stateid/2,north carolina:stateid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[virginia:stateid/2,potomac:riverid/2],[nebraska:stateid/2,north platte:riverid/2],[wyoming:stateid/2,green:riverid/2],[south dakota:stateid/2,nebraska:stateid/2],[district of columbia:stateid/2,maryland:stateid/2],[red:riverid/2,usa:countryid/2],[pennsylvania:stateid/2,delaware:riverid/2],[ohio:riverid/2,pennsylvania:stateid/2],[usa:countryid/2,washita:riverid/2],[hudson:riverid/2,new jersey:stateid/2],[new mexico:stateid/2,pecos:riverid/2],[delaware:stateid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[new jersey:stateid/2,delaware:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[usa:countryid/2,tombigbee:riverid/2],[colorado:stateid/2,new mexico:stateid/2],[missouri:stateid/2,mississippi:riverid/2],[oklahoma:stateid/2,neosho:riverid/2],[mississippi:stateid/2,arkansas:stateid/2],[new hampshire:stateid/2,vermont:stateid/2],[montana:stateid/2,bighorn:riverid/2],[utah:stateid/2,wyoming:stateid/2],[wyoming:stateid/2,yellowstone:riverid/2],[kansas:stateid/2,colorado:stateid/2],[wyoming:stateid/2,snake:riverid/2],[south dakota:stateid/2,dakota:riverid/2],[new mexico:stateid/2,gila:riverid/2],[powder:riverid/2,wyoming:stateid/2],[usa:countryid/2,ohio:riverid/2],[san juan:riverid/2,utah:stateid/2],[montana:stateid/2,missouri:riverid/2],[nevada:stateid/2,idaho:stateid/2],[usa:countryid/2,cumberland:riverid/2],[pearl:riverid/2,louisiana:stateid/2],[ohio:stateid/2,kentucky:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[new york:stateid/2,delaware:riverid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[california:stateid/2,oregon:stateid/2],[maryland:stateid/2,pennsylvania:stateid/2],[wyoming:stateid/2,powder:riverid/2],[idaho:stateid/2,nevada:stateid/2],[virginia:stateid/2,west virginia:stateid/2],[usa:countryid/2,rio grande:riverid/2],[georgia:stateid/2,alabama:stateid/2],[usa:countryid/2,powder:riverid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[kansas:stateid/2,smoky hill:riverid/2],[colorado:stateid/2,kansas:stateid/2],[nebraska:stateid/2,iowa:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[washington:stateid/2,columbia:riverid/2],[mississippi:riverid/2,usa:countryid/2],[north carolina:stateid/2,virginia:stateid/2],[mississippi:riverid/2,wisconsin:stateid/2],[missouri:stateid/2,kansas:stateid/2],[new mexico:stateid/2,canadian:riverid/2],[west virginia:stateid/2,maryland:stateid/2],[oklahoma:stateid/2,texas:stateid/2],[usa:countryid/2,hudson:riverid/2],[missouri:stateid/2,kentucky:stateid/2],[illinois:stateid/2,wisconsin:stateid/2],[georgia:stateid/2,florida:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[new jersey:stateid/2,hudson:riverid/2],[usa:countryid/2,wateree catawba:riverid/2],[virginia:stateid/2,tennessee:stateid/2],[vermont:stateid/2,new hampshire:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[west virginia:stateid/2,ohio:riverid/2],[arkansas:riverid/2,kansas:stateid/2],[south carolina:stateid/2,north carolina:stateid/2],[missouri:stateid/2,arkansas:stateid/2],[nebraska:stateid/2,republican:riverid/2],[pennsylvania:stateid/2,delaware:stateid/2],[nevada:stateid/2,oregon:stateid/2],[tennessee:stateid/2,missouri:stateid/2],[nevada:stateid/2,utah:stateid/2],[snake:riverid/2,idaho:stateid/2],[georgia:stateid/2,chattahoochee:riverid/2],[kentucky:stateid/2,mississippi:riverid/2],[colorado:riverid/2,utah:stateid/2],[delaware:stateid/2,maryland:stateid/2],[colorado:stateid/2,san juan:riverid/2],[texas:stateid/2,pecos:riverid/2],[illinois:stateid/2,wabash:riverid/2],[ohio:riverid/2,illinois:stateid/2],[montana:stateid/2,little missouri:riverid/2],[arkansas:stateid/2,tennessee:stateid/2],[illinois:stateid/2,kentucky:stateid/2],[pecos:riverid/2,usa:countryid/2],[ohio:stateid/2,ohio:riverid/2],[usa:countryid/2,yellowstone:riverid/2],[tennessee:riverid/2,alabama:stateid/2],[maryland:stateid/2,delaware:stateid/2],[usa:countryid/2,chattahoochee:riverid/2],[potomac:riverid/2,district of columbia:stateid/2],[arkansas:stateid/2,oklahoma:stateid/2],[hudson:riverid/2,usa:countryid/2],[nebraska:stateid/2,niobrara:riverid/2],[usa:countryid/2,canadian:riverid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[illinois:stateid/2,rock:riverid/2],[indiana:stateid/2,michigan:stateid/2],[iowa:stateid/2,nebraska:stateid/2],[kansas:stateid/2,neosho:riverid/2],[wyoming:stateid/2,south dakota:stateid/2],[montana:stateid/2,south dakota:stateid/2],[minnesota:stateid/2,wisconsin:stateid/2],[massachusetts:stateid/2,connecticut:riverid/2],[south dakota:stateid/2,missouri:riverid/2],[north carolina:stateid/2,wateree catawba:riverid/2],[new hampshire:stateid/2,maine:stateid/2],[ohio:stateid/2,west virginia:stateid/2],[kansas:stateid/2,republican:riverid/2],[missouri:riverid/2,nebraska:stateid/2],[new mexico:stateid/2,utah:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[louisiana:stateid/2,pearl:riverid/2],[pecos:riverid/2,texas:stateid/2],[illinois:stateid/2,iowa:stateid/2],[oregon:stateid/2,nevada:stateid/2],[wyoming:stateid/2,cheyenne:riverid/2],[north carolina:stateid/2,south carolina:stateid/2],[usa:countryid/2,mississippi:riverid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[virginia:stateid/2,district of columbia:stateid/2],[oregon:stateid/2,snake:riverid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[florida:stateid/2,chattahoochee:riverid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2],[maine:stateid/2,new hampshire:stateid/2]}:{[riverid/2,stateid/2],[stateid/2,riverid/2],[riverid/2,cityid/3],[stateid/2,stateid/2],[riverid/2,countryid/2],[countryid/2,riverid/2],[cityid/3,riverid/2]}[0,1] => {}:error]} | answer(A,largest(B,(population(A,B),state(A),next_to(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:322: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:323: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:324: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,largest(B,(state(A),loc(B,A),river(B),traverse(B,A))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:325: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:326: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmpgpqvzg9c.dlog:327: query => {[arkansas:stateid/2],[oklahoma:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B),next_to(A,C),const(C,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:328: query => {[Join failed syntactically: {[mississippi,mississippi:riverid/2,mississippi:riverid/2,wisconsin:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,iowa:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,usa:countryid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,arkansas:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,mississippi:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,minnesota:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,louisiana:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,kentucky:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,tennessee:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,missouri:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,illinois:stateid/2]}:{[length,riverid/2,riverid/2,stateid/2],[money,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,countryid/2],[date_month,riverid/2,riverid/2,countryid/2],[money,riverid/2,riverid/2,stateid/2],[rank,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,stateid/2],[name,riverid/2,riverid/2,countryid/2],[count/length^2,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,countryid/2],[date_year,riverid/2,riverid/2,countryid/2],[count,riverid/2,riverid/2,countryid/2],[name,riverid/2,riverid/2,stateid/2],[frac,riverid/2,riverid/2,stateid/2],[date_day,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,stateid/2],[length,riverid/2,riverid/2,countryid/2],[frac,riverid/2,riverid/2,countryid/2],[money/time_duration,riverid/2,riverid/2,stateid/2],[count,riverid/2,riverid/2,stateid/2],[money/time_duration,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,countryid/2],[date_day,riverid/2,riverid/2,countryid/2],[rank,riverid/2,riverid/2,stateid/2],[date_month,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,stateid/2],[count/length^2,riverid/2,riverid/2,stateid/2],[date_year,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,countryid/2]}[3] and {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:329: query => {[920600count]} | answer(A,(population(B,A),const(B,stateid('new hampshire'))))
        Example tmpgpqvzg9c.dlog:330: query => {[Join failed syntactically: {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[usa:countryid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]}:{[stateid/2],[countryid/2],[cityid/3]}[0] and {[colorado:riverid/2,2333000length],[wateree catawba:riverid/2,636000length],[san juan:riverid/2,579000length],[st. francis:riverid/2,684000length],[hudson:riverid/2,492000length],[gila:riverid/2,805000length],[powder:riverid/2,603000length],[neosho:riverid/2,740000length],[north platte:riverid/2,1094000length],[cimarron:riverid/2,965000length],[potomac:riverid/2,462000length],[ouachita:riverid/2,973000length],[tennessee:riverid/2,1049000length],[mississippi:riverid/2,3778000length],[canadian:riverid/2,1458000length],[arkansas:riverid/2,2333000length],[roanoke:riverid/2,660000length],[cumberland:riverid/2,1105000length],[green:riverid/2,1175000length],[republican:riverid/2,679000length],[little missouri:riverid/2,901000length],[wabash:riverid/2,764000length],[rio grande:riverid/2,3033000length],[yellowstone:riverid/2,1080000length],[tombigbee:riverid/2,658000length],[snake:riverid/2,1670000length],[washita:riverid/2,805000length],[rock:riverid/2,459000length],[delaware:riverid/2,451000length],[connecticut:riverid/2,655000length],[missouri:riverid/2,3968000length],[bighorn:riverid/2,541000length],[dakota:riverid/2,1142000length],[pecos:riverid/2,805000length],[cheyenne:riverid/2,848000length],[niobrara:riverid/2,693000length],[chattahoochee:riverid/2,702000length],[pearl:riverid/2,788000length],[clark fork:riverid/2,483000length],[red:riverid/2,1638000length],[white:riverid/2,1110000length],[columbia:riverid/2,1953000length],[ohio:riverid/2,1569000length],[allegheny:riverid/2,523000length],[south platte:riverid/2,682000length],[smoky hill:riverid/2,869000length]}:{[riverid/2,length]}[0] => {}:error]} | answer(A,(len(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:331: query => {[Join failed syntactically: {[mississippi:riverid/2,3778000length]}:{[riverid/2,length]}[0,1] and {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,cityid/3],[riverid/2,countryid/2]}[0,1] => {}:error]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),traverse(B,A)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:332: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:333: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpgpqvzg9c.dlog:334: query => {[Join failed syntactically: {[mississippi:riverid/2]}:{[riverid/2]}[0] and {[backbone mountain:placeid/2,1024length],[centerville:placeid/2,135length],[big stone lake:placeid/2,284length],[hunter:mountainid/2,4442length],[taum sauk mountain:placeid/2,540length],[belle fourche river:placeid/2,945length],[rainier:mountainid/2,4392length],[el diente:mountainid/2,4316length],[lincoln:mountainid/2,4354length],[crestone needle:mountainid/2,4327length],[foraker:mountainid/2,5304length],[mount whitney:placeid/2,4418length],[fairweather:mountainid/2,4663length],[mount katahdin:placeid/2,1606length],[beaver dam creek:placeid/2,610length],[east buttress:mountainid/2,4490length],[kit carson:mountainid/2,4317length],[torreys:mountainid/2,4349length],[long island sound:placeid/2,0length],[southeast corner:placeid/2,256length],[elbert:mountainid/2,4399length],[woodall mountain:placeid/2,246length],[mount rainier:placeid/2,4392length],[uncompahgre:mountainid/2,4361length],[antero:mountainid/2,4349length],[shavano:mountainid/2,4337length],[clingmans dome:placeid/2,2025length],[colorado river:placeid/2,143length],[white:mountainid/2,4342length],[sill:mountainid/2,4317length],[campbell hill:placeid/2,472length],[magazine mountain:placeid/2,839length],[tenleytown:placeid/2,125length],[eagle mountain:placeid/2,701length],[north palisade:mountainid/2,4341length],[high point:placeid/2,550length],[arkansas river:placeid/2,1021length],[evans:mountainid/2,4348length],[sanford:mountainid/2,4949length],[black mesa:placeid/2,1516length],[sassafras mountain:placeid/2,1085length],[yale:mountainid/2,4327length],[verdigris river:placeid/2,207length],[mount davidson:placeid/2,282length],[mount frissell:placeid/2,725length],[potomac river:placeid/2,0length],[wheeler peak:placeid/2,4011length],[bianca:mountainid/2,4372length],[whitney:mountainid/2,4418length],[ohio river:placeid/2,98length],[charles mound:placeid/2,376length],[castle:mountainid/2,4348length],[death valley:placeid/2,-85length],[mount washington:placeid/2,1917length],[potomac river:placeid/2,73length],[spruce knob:placeid/2,1482length],[mount davis:placeid/2,979length],[little river:placeid/2,87length],[mississippi river:placeid/2,78length],[quandary:mountainid/2,4348length],[st. elias:mountainid/2,5489length],[wrangell:mountainid/2,4317length],[mount rogers:placeid/2,1746length],[atlantic ocean:placeid/2,0length],[lake superior:placeid/2,183length],[brasstown bald:placeid/2,1458length],[bona:mountainid/2,5044length],[alverstone:mountainid/2,4439length],[ohio river:placeid/2,132length],[gannett peak:placeid/2,4202length],[mount hood:placeid/2,3424length],[longs:mountainid/2,4345length],[mississippi river:placeid/2,146length],[mount sunflower:placeid/2,1231length],[mississippi river:placeid/2,85length],[gulf of mexico:placeid/2,0length],[mckinley:mountainid/2,6194length],[black mountain:placeid/2,1263length],[franklin township:placeid/2,383length],[ocheyedan mound:placeid/2,511length],[granite peak:placeid/2,3901length],[driskill mountain:placeid/2,163length],[guadalupe peak:placeid/2,2667length],[mississippi river:placeid/2,55length],[timms hill:placeid/2,595length],[jerimoth hill:placeid/2,247length],[crestone:mountainid/2,4357length],[mauna kea:placeid/2,4205length],[shasta:mountainid/2,4317length],[lake erie:placeid/2,174length],[red river:placeid/2,229length],[williamson:mountainid/2,4382length],[kootenai river:placeid/2,549length],[bross:mountainid/2,4320length],[massive:mountainid/2,4396length],[mount mckinley:placeid/2,6194length],[princeton:mountainid/2,4327length],[grays:mountainid/2,4349length],[walton county:placeid/2,105length],[colorado river:placeid/2,21length],[borah peak:placeid/2,3859length],[johnson township:placeid/2,1654length],[mount mitchell:placeid/2,2037length],[blackburn:mountainid/2,4996length],[vancouver:mountainid/2,4785length],[wilson:mountainid/2,4342length],[white butte:placeid/2,1069length],[bear:mountainid/2,4520length],[cheaha mountain:placeid/2,734length],[kings peak:placeid/2,4123length],[mount marcy:placeid/2,1629length],[la plata:mountainid/2,4370length],[mount elbert:placeid/2,4399length],[red bluff reservoir:placeid/2,859length],[belford:mountainid/2,4327length],[humphreys peak:placeid/2,3851length],[new orleans:placeid/2,-1length],[hubbard:mountainid/2,4577length],[browne tower:mountainid/2,4429length],[harvard:mountainid/2,4395length],[maroon:mountainid/2,4315length],[delaware river:placeid/2,0length],[snake river:placeid/2,216length],[lake champlain:placeid/2,29length],[mount mansfield:placeid/2,1339length],[kennedy:mountainid/2,4964length],[mount greylock:placeid/2,1064length],[pacific ocean:placeid/2,0length],[st. francis river:placeid/2,70length],[mount curwood:placeid/2,604length],[lake michigan:placeid/2,177length],[boundary peak:placeid/2,4005length],[south buttress:mountainid/2,4842length],[ouachita river:placeid/2,17length],[churchill:mountainid/2,4766length],[harney peak:placeid/2,2207length]}:{[mountainid/2,length],[placeid/2,length]}[0] => {}:error]} | answer(A,(elevation(B,A),const(B,riverid(mississippi)),river(B)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:335: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:336: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmpgpqvzg9c.dlog:337: query => {} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),loc(B,C),const(C,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:338: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:339: query => {[Join failed syntactically: {[mississippi:riverid/2,3778000length]}:{[riverid/2,length]}[0,1] and {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,cityid/3],[riverid/2,countryid/2]}[0,1] => {}:error]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),traverse(B,A)))
        Example tmpgpqvzg9c.dlog:340: query => {[new mexico:stateid/2]} | answer(A,smallest(B,(state(A),next_to(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:341: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpgpqvzg9c.dlog:342: query => {[Join failed syntactically: {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[usa:countryid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]}:{[stateid/2],[countryid/2],[cityid/3]}[0] and {[colorado:riverid/2,2333000length],[wateree catawba:riverid/2,636000length],[san juan:riverid/2,579000length],[st. francis:riverid/2,684000length],[hudson:riverid/2,492000length],[gila:riverid/2,805000length],[powder:riverid/2,603000length],[neosho:riverid/2,740000length],[north platte:riverid/2,1094000length],[cimarron:riverid/2,965000length],[potomac:riverid/2,462000length],[ouachita:riverid/2,973000length],[tennessee:riverid/2,1049000length],[mississippi:riverid/2,3778000length],[canadian:riverid/2,1458000length],[arkansas:riverid/2,2333000length],[roanoke:riverid/2,660000length],[cumberland:riverid/2,1105000length],[green:riverid/2,1175000length],[republican:riverid/2,679000length],[little missouri:riverid/2,901000length],[wabash:riverid/2,764000length],[rio grande:riverid/2,3033000length],[yellowstone:riverid/2,1080000length],[tombigbee:riverid/2,658000length],[snake:riverid/2,1670000length],[washita:riverid/2,805000length],[rock:riverid/2,459000length],[delaware:riverid/2,451000length],[connecticut:riverid/2,655000length],[missouri:riverid/2,3968000length],[bighorn:riverid/2,541000length],[dakota:riverid/2,1142000length],[pecos:riverid/2,805000length],[cheyenne:riverid/2,848000length],[niobrara:riverid/2,693000length],[chattahoochee:riverid/2,702000length],[pearl:riverid/2,788000length],[clark fork:riverid/2,483000length],[red:riverid/2,1638000length],[white:riverid/2,1110000length],[columbia:riverid/2,1953000length],[ohio:riverid/2,1569000length],[allegheny:riverid/2,523000length],[south platte:riverid/2,682000length],[smoky hill:riverid/2,869000length]}:{[riverid/2,length]}[0] => {}:error]} | answer(A,(len(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:343: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpgpqvzg9c.dlog:344: query => {[louisiana:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))
        Example tmpgpqvzg9c.dlog:345: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmpgpqvzg9c.dlog:346: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:347: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:348: query => {[Join failed syntactically: {[mississippi:riverid/2]}:{[riverid/2]}[0] and {[backbone mountain:placeid/2,1024length],[centerville:placeid/2,135length],[big stone lake:placeid/2,284length],[hunter:mountainid/2,4442length],[taum sauk mountain:placeid/2,540length],[belle fourche river:placeid/2,945length],[rainier:mountainid/2,4392length],[el diente:mountainid/2,4316length],[lincoln:mountainid/2,4354length],[crestone needle:mountainid/2,4327length],[foraker:mountainid/2,5304length],[mount whitney:placeid/2,4418length],[fairweather:mountainid/2,4663length],[mount katahdin:placeid/2,1606length],[beaver dam creek:placeid/2,610length],[east buttress:mountainid/2,4490length],[kit carson:mountainid/2,4317length],[torreys:mountainid/2,4349length],[long island sound:placeid/2,0length],[southeast corner:placeid/2,256length],[elbert:mountainid/2,4399length],[woodall mountain:placeid/2,246length],[mount rainier:placeid/2,4392length],[uncompahgre:mountainid/2,4361length],[antero:mountainid/2,4349length],[shavano:mountainid/2,4337length],[clingmans dome:placeid/2,2025length],[colorado river:placeid/2,143length],[white:mountainid/2,4342length],[sill:mountainid/2,4317length],[campbell hill:placeid/2,472length],[magazine mountain:placeid/2,839length],[tenleytown:placeid/2,125length],[eagle mountain:placeid/2,701length],[north palisade:mountainid/2,4341length],[high point:placeid/2,550length],[arkansas river:placeid/2,1021length],[evans:mountainid/2,4348length],[sanford:mountainid/2,4949length],[black mesa:placeid/2,1516length],[sassafras mountain:placeid/2,1085length],[yale:mountainid/2,4327length],[verdigris river:placeid/2,207length],[mount davidson:placeid/2,282length],[mount frissell:placeid/2,725length],[potomac river:placeid/2,0length],[wheeler peak:placeid/2,4011length],[bianca:mountainid/2,4372length],[whitney:mountainid/2,4418length],[ohio river:placeid/2,98length],[charles mound:placeid/2,376length],[castle:mountainid/2,4348length],[death valley:placeid/2,-85length],[mount washington:placeid/2,1917length],[potomac river:placeid/2,73length],[spruce knob:placeid/2,1482length],[mount davis:placeid/2,979length],[little river:placeid/2,87length],[mississippi river:placeid/2,78length],[quandary:mountainid/2,4348length],[st. elias:mountainid/2,5489length],[wrangell:mountainid/2,4317length],[mount rogers:placeid/2,1746length],[atlantic ocean:placeid/2,0length],[lake superior:placeid/2,183length],[brasstown bald:placeid/2,1458length],[bona:mountainid/2,5044length],[alverstone:mountainid/2,4439length],[ohio river:placeid/2,132length],[gannett peak:placeid/2,4202length],[mount hood:placeid/2,3424length],[longs:mountainid/2,4345length],[mississippi river:placeid/2,146length],[mount sunflower:placeid/2,1231length],[mississippi river:placeid/2,85length],[gulf of mexico:placeid/2,0length],[mckinley:mountainid/2,6194length],[black mountain:placeid/2,1263length],[franklin township:placeid/2,383length],[ocheyedan mound:placeid/2,511length],[granite peak:placeid/2,3901length],[driskill mountain:placeid/2,163length],[guadalupe peak:placeid/2,2667length],[mississippi river:placeid/2,55length],[timms hill:placeid/2,595length],[jerimoth hill:placeid/2,247length],[crestone:mountainid/2,4357length],[mauna kea:placeid/2,4205length],[shasta:mountainid/2,4317length],[lake erie:placeid/2,174length],[red river:placeid/2,229length],[williamson:mountainid/2,4382length],[kootenai river:placeid/2,549length],[bross:mountainid/2,4320length],[massive:mountainid/2,4396length],[mount mckinley:placeid/2,6194length],[princeton:mountainid/2,4327length],[grays:mountainid/2,4349length],[walton county:placeid/2,105length],[colorado river:placeid/2,21length],[borah peak:placeid/2,3859length],[johnson township:placeid/2,1654length],[mount mitchell:placeid/2,2037length],[blackburn:mountainid/2,4996length],[vancouver:mountainid/2,4785length],[wilson:mountainid/2,4342length],[white butte:placeid/2,1069length],[bear:mountainid/2,4520length],[cheaha mountain:placeid/2,734length],[kings peak:placeid/2,4123length],[mount marcy:placeid/2,1629length],[la plata:mountainid/2,4370length],[mount elbert:placeid/2,4399length],[red bluff reservoir:placeid/2,859length],[belford:mountainid/2,4327length],[humphreys peak:placeid/2,3851length],[new orleans:placeid/2,-1length],[hubbard:mountainid/2,4577length],[browne tower:mountainid/2,4429length],[harvard:mountainid/2,4395length],[maroon:mountainid/2,4315length],[delaware river:placeid/2,0length],[snake river:placeid/2,216length],[lake champlain:placeid/2,29length],[mount mansfield:placeid/2,1339length],[kennedy:mountainid/2,4964length],[mount greylock:placeid/2,1064length],[pacific ocean:placeid/2,0length],[st. francis river:placeid/2,70length],[mount curwood:placeid/2,604length],[lake michigan:placeid/2,177length],[boundary peak:placeid/2,4005length],[south buttress:mountainid/2,4842length],[ouachita river:placeid/2,17length],[churchill:mountainid/2,4766length],[harney peak:placeid/2,2207length]}:{[mountainid/2,length],[placeid/2,length]}[0] => {}:error]} | answer(A,(elevation(B,A),const(B,riverid(mississippi)),river(B)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:349: query => {[Join failed syntactically: {[colorado:riverid/2,2333000length],[wateree catawba:riverid/2,636000length],[san juan:riverid/2,579000length],[st. francis:riverid/2,684000length],[hudson:riverid/2,492000length],[gila:riverid/2,805000length],[powder:riverid/2,603000length],[neosho:riverid/2,740000length],[north platte:riverid/2,1094000length],[cimarron:riverid/2,965000length],[potomac:riverid/2,462000length],[ouachita:riverid/2,973000length],[tennessee:riverid/2,1049000length],[mississippi:riverid/2,3778000length],[canadian:riverid/2,1458000length],[arkansas:riverid/2,2333000length],[roanoke:riverid/2,660000length],[cumberland:riverid/2,1105000length],[green:riverid/2,1175000length],[republican:riverid/2,679000length],[little missouri:riverid/2,901000length],[wabash:riverid/2,764000length],[rio grande:riverid/2,3033000length],[yellowstone:riverid/2,1080000length],[tombigbee:riverid/2,658000length],[snake:riverid/2,1670000length],[washita:riverid/2,805000length],[rock:riverid/2,459000length],[delaware:riverid/2,451000length],[connecticut:riverid/2,655000length],[missouri:riverid/2,3968000length],[bighorn:riverid/2,541000length],[dakota:riverid/2,1142000length],[pecos:riverid/2,805000length],[cheyenne:riverid/2,848000length],[niobrara:riverid/2,693000length],[chattahoochee:riverid/2,702000length],[pearl:riverid/2,788000length],[clark fork:riverid/2,483000length],[red:riverid/2,1638000length],[white:riverid/2,1110000length],[columbia:riverid/2,1953000length],[ohio:riverid/2,1569000length],[allegheny:riverid/2,523000length],[south platte:riverid/2,682000length],[smoky hill:riverid/2,869000length]}:{[riverid/2,length]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(len(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:350: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:352: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmpgpqvzg9c.dlog:353: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmpgpqvzg9c.dlog:354: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:355: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:356: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:357: query => {[missouri:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B),loc(C,B),const(C,riverid(mississippi)),river(C))))
        Example tmpgpqvzg9c.dlog:358: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmpgpqvzg9c.dlog:359: query => {[Join failed syntactically: {[mississippi,mississippi:riverid/2,mississippi:riverid/2,wisconsin:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,iowa:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,usa:countryid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,arkansas:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,mississippi:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,minnesota:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,louisiana:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,kentucky:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,tennessee:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,missouri:stateid/2],[mississippi,mississippi:riverid/2,mississippi:riverid/2,illinois:stateid/2]}:{[length,riverid/2,riverid/2,stateid/2],[money,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,countryid/2],[date_month,riverid/2,riverid/2,countryid/2],[money,riverid/2,riverid/2,stateid/2],[rank,riverid/2,riverid/2,countryid/2],[time_duration,riverid/2,riverid/2,stateid/2],[name,riverid/2,riverid/2,countryid/2],[count/length^2,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,countryid/2],[date_year,riverid/2,riverid/2,countryid/2],[count,riverid/2,riverid/2,countryid/2],[name,riverid/2,riverid/2,stateid/2],[frac,riverid/2,riverid/2,stateid/2],[date_day,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,stateid/2],[length,riverid/2,riverid/2,countryid/2],[frac,riverid/2,riverid/2,countryid/2],[money/time_duration,riverid/2,riverid/2,stateid/2],[count,riverid/2,riverid/2,stateid/2],[money/time_duration,riverid/2,riverid/2,countryid/2],[length^2,riverid/2,riverid/2,stateid/2],[date_time,riverid/2,riverid/2,countryid/2],[date_day,riverid/2,riverid/2,countryid/2],[rank,riverid/2,riverid/2,stateid/2],[date_month,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,stateid/2],[count/length^2,riverid/2,riverid/2,stateid/2],[date_year,riverid/2,riverid/2,stateid/2],[date,riverid/2,riverid/2,countryid/2]}[3] and {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,largest(B,(state(A),loc(B,A),city(B),loc(C,B),const(C,riverid(mississippi)),river(C))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:360: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example tmpgpqvzg9c.dlog:361: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpgpqvzg9c.dlog:362: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:364: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgpqvzg9c.dlog:366: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example tmpgpqvzg9c.dlog:367: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:368: query => {[920600count]} | answer(A,(population(B,A),const(B,stateid('new hampshire'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:370: query => {} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),loc(B,C),const(C,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:371: query => {[new york:stateid/2]} | answer(A,largest(B,(state(A),loc(B,A),city(B))))
        Example tmpgpqvzg9c.dlog:372: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpgpqvzg9c.dlog:373: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:374: query => {[Join failed syntactically: {[mississippi:riverid/2]}:{[riverid/2]}[0] and {[columbia_sc:cityid/3],[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[pierre_sd:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),capital(B),const(B,riverid(mississippi)),river(B)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:375: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:376: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:377: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:378: query => {[Join failed syntactically: {[usa:countryid/2]}:{[countryid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B),loc(C,B),const(C,stateid(texas)))))
        Example tmpgpqvzg9c.dlog:379: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgpqvzg9c.dlog:380: query => {[4.14e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
      } [1.1s, cum. 2.7s]
    } [2.7s, cum. 2.7s]
    Randomly splitting 372 general examples
    261 training examples, 111 test examples
  } [2.7s, cum. 2.8s]
  Execution directory: /Users/jakeimyak/Desktop/CSE5525/hw3-distrib/state/execs/42.exec
} [2.8s]
