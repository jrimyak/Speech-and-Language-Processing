main() {
  Execution directory: /Users/jakeimyak/Desktop/CSE5525/hw3-distrib/state/execs/72.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog
        698 statements
      } [1.8s, cum. 1.8s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/9r/g7b52jgj4xj154c8jnl19wq00000gn/T/tmpm10beqjj.dlog {
        Parsing /var/folders/9r/g7b52jgj4xj154c8jnl19wq00000gn/T/tmpm10beqjj.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(state(A),loc(B,A),smallest(B,capital(B))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(florida)))))).
          _parse([query], answer(A,(major(A),river(A),loc(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,_))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(austin,_))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("fort wayne",_))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),state(B),const(B,countryid(usa))),@))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(arizona))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(atlanta,_))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(arizona))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))).
          _parse([query], answer(A,largest(B,(state(A),next_to(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(oregon)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(georgia))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(kentucky))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid("des moines",_)))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(missouri)),traverse(C,B)))).
          _parse([query], answer(A,highest(B,(state(A),loc(B,A),place(B))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),population(B,C))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,stateid(florida))))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande")),river(B)))).
          _parse([query], answer(A,longest(B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))).
          _parse([query], answer(A,(population(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B),traverse(B,A))))).
          _parse([query], answer(A,(state(A),largest(B,(city(B),loc(C,B),capital(C),const(C,cityid(albany,_)))),@))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,highest(B,(state(A),loc(B,A),place(B))))).
          _parse([query], answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(georgia))))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(alabama))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,largest(B,(city(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(florida))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))).
          _parse([query], answer(A,highest(B,(state(A),loc(B,A))),?))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("fort wayne",_))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),major(C),river(C),traverse(C,B))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(mississippi))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(california)))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("mount mckinley"))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(lake(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(B,state(B))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(hawaii)),population(A,B))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(california)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,sum(B,state(B),area(B),A))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa))),@))).
          _parse([query], answer(A,smallest(A,state(A)))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(louisiana))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),smallest(B,state(B))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(colorado)))))).
          _parse([query], answer(A,(loc(B,A),const(B,(place(B)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,smallest(B,(state(B),next_to(B,C),const(C,stateid(california)))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))).
          _parse([query], answer(A,(state(A),loc(B,A),major(B),river(B)))).
          _parse([query], answer(A,(density(B,A),most(B,C,(state(B),next_to(B,C),state(C)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),largest(D,(state(C),population(C,D)))),A))).
          _parse([query], answer(A,largest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande")),river(B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(colorado))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,lowest(B,(state(A),density(A,B),state(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),city(B),loc(B,C),const(C,stateid(california))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),most(C,D,(state(C),population(C,D),traverse(D,C)))),A))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,(river(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(ohio))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("mount mckinley"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(delaware)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,(state(A),const(B,cityid(dallas,_)),loc(B,A)))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))).
          _parse([query], answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(louisiana)))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(florida)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(arizona))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(atlanta,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("fort wayne",_))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("new york"))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(springfield,_))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,largest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,(elevation(B,A),const(B,cityid("fort wayne",_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(arkansas)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande")),river(B)))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(missouri))),?))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas))),)).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B),traverse(B,A))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid("rhode island")))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),largest(B,state(B)))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),capital(B,cityid(boston,_))))).
          _parse([query], answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(illinois))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))).
          _parse([query], answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(hawaii))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,stateid(georgia)))))))).
          _parse([query], answer(A,(state(A),longest(B,river(B)),traverse(B,A)))).
          _parse([query], answer(A,count(B,(state(B),const(C,countryid(usa)),loc(B,A)),A))).
          _parse([query], answer(A,(population(B,A),largest(C,(state(B),loc(C,B),place(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,(elevation(B,A),const(B,stateid(maryland))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(B,A),most(B,C,(state(B),next_to(B,C))))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(density(B,A),largest(B,state(B))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("scotts valley",_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,place(C))))).
          _parse([query], answer(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(hawaii)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande")),river(B)))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),population(@,A))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),capital(C),const(C,cityid(atlanta,_))))).
          _parse([query], answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),most(B,C,(state(B),traverse(C,B)))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(loc(B,A),const(B,(place("mount ,")))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),major(C),city(C),high_point(B,C),state(C),loc(D,C),lowest(D,(place(D),loc(D,E))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(florida))))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),river(B))))).
          _parse([query], answer(A,(area(B,A),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(loc(B,A),const(B,riverid("rio grande")),river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)),A)),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(nevada))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,largest(B,(city(A),density(A,B))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(wisconsin))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota))))).
          _parse([query], answer(A,(density(B,A),state(B),loc(C,B),capital(C),high_point(B,C)))).
          DatalogParser.loadSafe(): end
        }
        560 statements
        Example tmpm10beqjj.dlog:0: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:1: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:2: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:3: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:4: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:5: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:6: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:7: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:8: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:9: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:10: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:11: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:12: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:13: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:14: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:15: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:16: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:17: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:18: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:19: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:20: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:21: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:22: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:23: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:24: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:25: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:26: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:27: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:28: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:29: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:30: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:31: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:32: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:33: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:34: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:35: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:36: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:37: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:38: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:39: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:40: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:41: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:42: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:43: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:44: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:45: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:46: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:47: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:48: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:49: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:50: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:51: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:52: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:53: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:54: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:55: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:56: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:57: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:58: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:59: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:60: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:61: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:62: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:63: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:64: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:65: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:66: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:67: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:68: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:69: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:70: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:71: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:72: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:73: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:74: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:75: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:76: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:77: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:78: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:79: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:80: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:81: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:82: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:83: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:84: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:85: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:86: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:87: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:88: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:89: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:90: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:91: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:92: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:93: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:94: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:95: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:96: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:97: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:98: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:99: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:100: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:101: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:102: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:103: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:104: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:105: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:106: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:107: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:108: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:109: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:110: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:111: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:112: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:113: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:114: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:115: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:116: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:117: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:118: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:119: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:120: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:121: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:122: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:123: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:124: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:125: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:126: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:127: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:128: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:129: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:130: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:131: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:132: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:133: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:134: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:135: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:136: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:137: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:138: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:139: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:140: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:141: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:142: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:143: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:144: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:145: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:146: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:147: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:148: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:149: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:150: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:151: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:152: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:153: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:154: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:155: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:156: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:157: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:158: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:159: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:160: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:161: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:162: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:163: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:164: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:165: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:166: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:167: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:168: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:169: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:170: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:171: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:172: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:173: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:174: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:175: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:176: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:177: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:178: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:179: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:180: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:181: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:182: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:183: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:184: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:185: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:186: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:187: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:188: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:189: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:190: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:191: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:192: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:193: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:194: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:195: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:196: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:197: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:198: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:199: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:200: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:201: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:202: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:203: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:204: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:205: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:206: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:207: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:208: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:209: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:210: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:211: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:212: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:213: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:214: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:215: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:216: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:217: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:218: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:219: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:220: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:221: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:222: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:223: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:224: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:225: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:226: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:227: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:228: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:229: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:230: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:231: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:232: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:233: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:234: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:235: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:236: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:237: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:238: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:239: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:240: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:241: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:242: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:243: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:244: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:245: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:246: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:247: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:248: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:249: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:250: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:251: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:252: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:253: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:254: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:255: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:256: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:257: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:258: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:259: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:260: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:261: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:262: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:263: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:264: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:265: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:266: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:267: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:268: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:269: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:270: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:271: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:272: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:273: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:274: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:275: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:276: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:277: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:278: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:279: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpm10beqjj.dlog:280: query => {[west virginia:stateid/2]} | answer(A,(state(A),loc(B,A),smallest(B,capital(B))))
        Example tmpm10beqjj.dlog:281: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:282: query => {[georgia:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(florida)))))
        Example tmpm10beqjj.dlog:283: query => {} | answer(A,(major(A),river(A),loc(A,B),const(B,stateid(ohio))))
        Example tmpm10beqjj.dlog:284: query => {[wabash:riverid/2],[ohio:riverid/2],[mississippi:riverid/2],[rock:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(illinois))))
        Example tmpm10beqjj.dlog:285: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,_))))
        Example tmpm10beqjj.dlog:286: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpm10beqjj.dlog:287: query => {[albany_ga:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))
        Example tmpm10beqjj.dlog:288: query => {[gila:riverid/2],[washita:riverid/2],[pecos:riverid/2],[arkansas:riverid/2],[cimarron:riverid/2],[white:riverid/2],[rio grande:riverid/2],[mississippi:riverid/2],[pearl:riverid/2],[canadian:riverid/2],[red:riverid/2],[neosho:riverid/2],[ouachita:riverid/2],[san juan:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(austin,_))))
        Example tmpm10beqjj.dlog:289: query => {[lake michigan:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpm10beqjj.dlog:290: query => {[1125000count]} | answer(A,(population(B,A),const(B,stateid(maine))))
        Example tmpm10beqjj.dlog:291: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))
        Example tmpm10beqjj.dlog:292: query => {[indiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('fort wayne',_))))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:293: query => {[2718000count]} | answer(A,(population(B,A),const(B,stateid(arizona))))
        Example tmpm10beqjj.dlog:294: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmpm10beqjj.dlog:295: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpm10beqjj.dlog:296: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:297: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpm10beqjj.dlog:298: query => {[indianapolis_in:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))
        Example tmpm10beqjj.dlog:299: query => {[435count]} | answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpm10beqjj.dlog:300: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:301: query => {[2286000count],[4206000count],[3025000count],[1303000count]} | answer(A,(population(B,A),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpm10beqjj.dlog:302: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example tmpm10beqjj.dlog:303: query => {[wichita_ks:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmpm10beqjj.dlog:304: query => {[425022count]} | answer(A,(population(B,A),const(B,cityid(atlanta,_))))
        Example tmpm10beqjj.dlog:305: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:306: query => {[2718000count]} | answer(A,(population(B,A),const(B,stateid(arizona))))
        Example tmpm10beqjj.dlog:307: query => {[4count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))
        Example tmpm10beqjj.dlog:308: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C)))))
        Example tmpm10beqjj.dlog:309: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))
        Example tmpm10beqjj.dlog:310: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,largest(B,(state(A),next_to(A,B))))
        Example tmpm10beqjj.dlog:311: query => {[los angeles_ca:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))
        Example tmpm10beqjj.dlog:312: query => {[colorado:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(oregon)))))
        Example tmpm10beqjj.dlog:313: query => {[concord_nh:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid('new hampshire'))))
        Example tmpm10beqjj.dlog:314: query => {[california:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),city(B))))
        Example tmpm10beqjj.dlog:315: query => {[10count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))
        Example tmpm10beqjj.dlog:316: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:317: query => {[425022count]} | answer(A,(population(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(georgia))))))
        Example tmpm10beqjj.dlog:318: query => {[jefferson city_mo:cityid/3],[richmond_va:cityid/3],[indianapolis_in:cityid/3],[nashville_tn:cityid/3],[charleston_wv:cityid/3],[columbus_oh:cityid/3],[springfield_il:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(kentucky))))
        Example tmpm10beqjj.dlog:319: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmpm10beqjj.dlog:320: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))
        Example tmpm10beqjj.dlog:321: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:322: query => {[harrisburg_pa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpm10beqjj.dlog:323: query => {[massachusetts:stateid/2],[maine:stateid/2],[vermont:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('new hampshire'))))
        Example tmpm10beqjj.dlog:324: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[south dakota:stateid/2],[minnesota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(missouri)),traverse(C,B)))
        Example tmpm10beqjj.dlog:325: query => {[alaska:stateid/2]} | answer(A,highest(B,(state(A),loc(B,A),place(B))))
        Example tmpm10beqjj.dlog:326: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))
        Example tmpm10beqjj.dlog:327: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpm10beqjj.dlog:328: query => {[california:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),city(B))))
        Example tmpm10beqjj.dlog:329: query => {[michigan:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))
        Example tmpm10beqjj.dlog:330: query => {[mount whitney:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),population(B,C))))))
        Example tmpm10beqjj.dlog:331: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[kentucky:stateid/2],[massachusetts:stateid/2],[virginia:stateid/2],[new hampshire:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[district of columbia:stateid/2],[alabama:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[connecticut:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[maryland:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,stateid(florida))))))
        Example tmpm10beqjj.dlog:332: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:333: query => {[964000count]} | answer(A,(population(B,A),const(B,stateid(hawaii))))
        Example tmpm10beqjj.dlog:334: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example tmpm10beqjj.dlog:335: query => {[51count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpm10beqjj.dlog:336: query => {[atlanta_ga:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))
        Example tmpm10beqjj.dlog:337: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpm10beqjj.dlog:338: query => {[iowa:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[mississippi:stateid/2],[alabama:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[north carolina:stateid/2]} | answer(A,(state(A),next_to(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))
        Example tmpm10beqjj.dlog:339: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande')),river(B)))
        Example tmpm10beqjj.dlog:340: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,longest(B,(state(A),loc(B,A),river(B))))
        Example tmpm10beqjj.dlog:341: query => {[virginia:stateid/2],[indiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))
        Example tmpm10beqjj.dlog:342: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(A,B),const(B,countryid(usa))))
        Example tmpm10beqjj.dlog:343: query => {[sacramento_ca:cityid/3]} | answer(A,(capital(A),loc(A,B),largest(C,(state(B),population(B,C)))))
        Example tmpm10beqjj.dlog:344: query => {[michigan:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))
        Example tmpm10beqjj.dlog:345: query => {[iowa:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[mississippi:stateid/2],[alabama:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[north carolina:stateid/2]} | answer(A,(state(A),next_to(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))
        Example tmpm10beqjj.dlog:346: query => {[401800count]} | answer(A,(population(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpm10beqjj.dlog:347: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpm10beqjj.dlog:348: query => {[michigan:stateid/2],[minnesota:stateid/2],[iowa:stateid/2],[illinois:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))
        Example tmpm10beqjj.dlog:349: query => {[dakota:riverid/2],[little missouri:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid('south dakota'))))
        Example tmpm10beqjj.dlog:350: query => {[Join failed syntactically: {[dakota:riverid/2],[wabash:riverid/2],[gila:riverid/2],[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[washita:riverid/2],[hudson:riverid/2],[snake:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[pecos:riverid/2],[ohio:riverid/2],[arkansas:riverid/2],[roanoke:riverid/2],[colorado:riverid/2],[little missouri:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[cimarron:riverid/2],[white:riverid/2],[powder:riverid/2],[cumberland:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[columbia:riverid/2],[tennessee:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[mississippi:riverid/2],[pearl:riverid/2],[potomac:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[ouachita:riverid/2],[yellowstone:riverid/2],[cheyenne:riverid/2],[green:riverid/2],[san juan:riverid/2],[missouri:riverid/2],[st. francis:riverid/2]}:{[riverid/2]}[0] and {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,cityid/3],[riverid/2,countryid/2]}[1] => {}:error]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B),traverse(B,A))))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:351: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpm10beqjj.dlog:352: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:353: query => {[alaska:stateid/2]} | answer(A,highest(B,(state(A),loc(B,A),place(B))))
        Example tmpm10beqjj.dlog:354: query => {[massachusetts:stateid/2]} | answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))
        Example tmpm10beqjj.dlog:355: query => {[1458length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(georgia))))))
        Example tmpm10beqjj.dlog:356: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example tmpm10beqjj.dlog:357: query => {[0count]} | answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))
        Example tmpm10beqjj.dlog:358: query => {[1.34e+11length^2]} | answer(A,(size(B,A),const(B,stateid(alabama))))
        Example tmpm10beqjj.dlog:359: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmpm10beqjj.dlog:360: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpm10beqjj.dlog:361: query => {[Join failed syntactically: {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,countryid/2],[riverid/2,stateid/2]}[1] and {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,largest(B,(city(A),loc(B,A),river(B))))
        Example tmpm10beqjj.dlog:362: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpm10beqjj.dlog:363: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:364: query => {[1.78e+11length^2]} | answer(A,(area(B,A),const(B,stateid(florida))))
        Example tmpm10beqjj.dlog:365: query => {[sacramento_ca:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(california))))
        Example tmpm10beqjj.dlog:366: query => {[sacramento_ca:cityid/3]} | answer(A,(capital(A),loc(A,B),largest(C,(state(B),population(B,C)))))
        Example tmpm10beqjj.dlog:367: query => {[new york:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B))))
        Example tmpm10beqjj.dlog:368: query => {[denver_co:cityid/3]} | answer(A,(capital(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C)))))
        Example tmpm10beqjj.dlog:369: query => {[indianapolis_in:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:370: query => {[172196count]} | answer(A,(population(B,A),const(B,cityid('fort wayne',_))))
        Example tmpm10beqjj.dlog:371: query => {[Join failed syntactically: {[jefferson city_mo:cityid/3],[columbia_mo:cityid/3],[springfield_mo:cityid/3],[independence_mo:cityid/3],[st. louis_mo:cityid/3],[white:riverid/2],[taum sauk mountain:placeid/2],[st. francis river:placeid/2],[mississippi:riverid/2],[st. joseph_mo:cityid/3],[kansas city_mo:cityid/3],[missouri:riverid/2],[st. francis:riverid/2]}:{[placeid/2],[lakeid/2],[cityid/3],[mountainid/2],[riverid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(A,B),const(B,stateid(missouri))))
        Example tmpm10beqjj.dlog:372: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpm10beqjj.dlog:373: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:374: query => {[kentucky:stateid/2],[virginia:stateid/2],[mississippi:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[north carolina:stateid/2],[florida:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(mississippi))))
        Example tmpm10beqjj.dlog:375: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example tmpm10beqjj.dlog:376: query => {[los angeles_ca:cityid/3]} | answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(california)))))
        Example tmpm10beqjj.dlog:377: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmpm10beqjj.dlog:378: query => {[6194length]} | answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))
        Example tmpm10beqjj.dlog:379: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpm10beqjj.dlog:380: query => {[tahoe:lakeid/2],[salton sea:lakeid/2]} | answer(A,(lake(A),loc(A,B),const(B,stateid(california))))
        Example tmpm10beqjj.dlog:381: query => {[new york_ny:cityid/3]} | answer(A,largest(B,(city(A),population(A,B))))
        Example tmpm10beqjj.dlog:382: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),largest(B,state(B))))
        Example tmpm10beqjj.dlog:383: query => {[honolulu_hi:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(hawaii)),population(A,B))))
        Example tmpm10beqjj.dlog:384: query => {[walton county:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))
        Example tmpm10beqjj.dlog:385: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(california)))))
        Example tmpm10beqjj.dlog:386: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:387: query => {[9.51e+12length^2]} | answer(A,sum(B,state(B),area(B),A))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:388: query => {[district of columbia:stateid/2]} | answer(A,smallest(A,state(A)))
        Example tmpm10beqjj.dlog:389: query => {[4count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(louisiana))),A))
        Example tmpm10beqjj.dlog:390: query => {[alabama:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[north carolina:stateid/2],[florida:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))
        Example tmpm10beqjj.dlog:391: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:392: query => {} | answer(A,(major(A),city(A),loc(A,B),smallest(B,state(B))))
        Example tmpm10beqjj.dlog:393: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:394: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(colorado)))))
        Example FAILED TO EXECUTE
        Example tmpm10beqjj.dlog:396: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmpm10beqjj.dlog:397: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpm10beqjj.dlog:398: query => {[indianapolis_in:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))
        Example tmpm10beqjj.dlog:399: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:400: query => {[denver_co:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))
        Example tmpm10beqjj.dlog:401: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example tmpm10beqjj.dlog:402: query => {[1.53e+12length^2]} | answer(A,(size(B,A),const(B,stateid(alaska))))
        Example FAILED TO EXECUTE
        Example tmpm10beqjj.dlog:404: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpm10beqjj.dlog:405: query => {[new york:stateid/2]} | answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))
        Example tmpm10beqjj.dlog:406: query => {[massachusetts:stateid/2],[maine:stateid/2],[vermont:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('new hampshire'))))
        Example tmpm10beqjj.dlog:407: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:408: query => {[307890000count]} | answer(A,(population(B,A),const(B,countryid(usa))))
        Example tmpm10beqjj.dlog:409: query => {[Join failed syntactically: {[dakota:riverid/2],[wabash:riverid/2],[gila:riverid/2],[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[washita:riverid/2],[hudson:riverid/2],[snake:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[pecos:riverid/2],[ohio:riverid/2],[arkansas:riverid/2],[roanoke:riverid/2],[colorado:riverid/2],[little missouri:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[cimarron:riverid/2],[white:riverid/2],[powder:riverid/2],[cumberland:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[columbia:riverid/2],[tennessee:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[mississippi:riverid/2],[pearl:riverid/2],[potomac:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[ouachita:riverid/2],[yellowstone:riverid/2],[cheyenne:riverid/2],[green:riverid/2],[san juan:riverid/2],[missouri:riverid/2],[st. francis:riverid/2]}:{[riverid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),next_to(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))
        Example tmpm10beqjj.dlog:410: query => {[delaware river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmpm10beqjj.dlog:411: query => {[7365000count]} | answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))
        Example tmpm10beqjj.dlog:412: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[wisconsin:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[virginia:stateid/2],[new hampshire:stateid/2],[mississippi:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[alabama:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[montana:stateid/2],[maryland:stateid/2]} | answer(A,(state(A),loc(B,A),major(B),river(B)))
        Example tmpm10beqjj.dlog:413: query => {[2.72e-05count/length^2],[4.21e-05count/length^2]} | answer(A,(density(B,A),most(B,C,(state(B),next_to(B,C),state(C)))))
        Example tmpm10beqjj.dlog:414: query => {[3count]} | answer(A,count(B,(state(B),next_to(B,C),largest(D,(state(C),population(C,D)))),A))
        Example tmpm10beqjj.dlog:415: query => {[alaska:stateid/2]} | answer(A,largest(B,(state(A),area(A,B))))
        Example tmpm10beqjj.dlog:416: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmpm10beqjj.dlog:417: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmpm10beqjj.dlog:418: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande')),river(B)))
        Example tmpm10beqjj.dlog:419: query => {[denver_co:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpm10beqjj.dlog:420: query => {[2333000length]} | answer(A,(len(B,A),const(B,riverid(colorado))))
        Example tmpm10beqjj.dlog:421: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmpm10beqjj.dlog:422: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:423: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))
        Example tmpm10beqjj.dlog:424: query => {[Join failed syntactically: {[montana:stateid/2,2.07e-06count/length^2],[california:stateid/2,5.78e-05count/length^2],[texas:stateid/2,2.06e-05count/length^2],[hawaii:stateid/2,5.75e-05count/length^2],[idaho:stateid/2,4.39e-06count/length^2],[indiana:stateid/2,5.86e-05count/length^2],[alabama:stateid/2,2.91e-05count/length^2],[west virginia:stateid/2,3.11e-05count/length^2],[south carolina:stateid/2,3.87e-05count/length^2],[north dakota:stateid/2,3.56e-06count/length^2],[vermont:stateid/2,2.05e-05count/length^2],[utah:stateid/2,6.64e-06count/length^2],[rhode island:stateid/2,3.02e-04count/length^2],[nebraska:stateid/2,7.84e-06count/length^2],[new jersey:stateid/2,3.65e-04count/length^2],[district of columbia:stateid/2,2.24e-04count/length^2],[georgia:stateid/2,3.58e-05count/length^2],[pennsylvania:stateid/2,1.01e-04count/length^2],[louisiana:stateid/2,3.40e-05count/length^2],[iowa:stateid/2,2.00e-05count/length^2],[kentucky:stateid/2,1.11e-05count/length^2],[illinois:stateid/2,7.82e-05count/length^2],[oregon:stateid/2,1.05e-05count/length^2],[maryland:stateid/2,1.56e-04count/length^2],[virginia:stateid/2,5.06e-05count/length^2],[kansas:stateid/2,1.11e-05count/length^2],[north carolina:stateid/2,4.31e-05count/length^2],[colorado:stateid/2,1.07e-05count/length^2],[tennessee:stateid/2,4.21e-05count/length^2],[massachusetts:stateid/2,2.67e-04count/length^2],[wisconsin:stateid/2,3.23e-05count/length^2],[missouri:stateid/2,2.72e-05count/length^2],[michigan:stateid/2,6.11e-05count/length^2],[washington:stateid/2,2.33e-05count/length^2],[ohio:stateid/2,1.01e-04count/length^2],[nevada:stateid/2,2.80e-06count/length^2],[florida:stateid/2,5.48e-05count/length^2],[maine:stateid/2,1.31e-05count/length^2],[minnesota:stateid/2,1.86e-05count/length^2],[wyoming:stateid/2,1.85e-06count/length^2],[new york:stateid/2,1.38e-04count/length^2],[delaware:stateid/2,1.12e-04count/length^2],[south dakota:stateid/2,3.46e-06count/length^2],[alaska:stateid/2,2.62e-07count/length^2],[mississippi:stateid/2,2.04e-05count/length^2],[new hampshire:stateid/2,3.83e-05count/length^2],[arkansas:stateid/2,1.66e-05count/length^2],[connecticut:stateid/2,2.39e-04count/length^2],[oklahoma:stateid/2,1.67e-05count/length^2],[arizona:stateid/2,9.21e-06count/length^2],[new mexico:stateid/2,4.14e-06count/length^2]}:{[stateid/2,count/length^2]}[1] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,lowest(B,(state(A),density(A,B),state(B))))
        Example tmpm10beqjj.dlog:425: query => {[Join failed syntactically: {[mount davidson:placeid/2]}:{[placeid/2]}[0] and {[columbia_sc:cityid/3],[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[pierre_sd:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,(capital(A),loc(A,B),city(B),loc(B,C),const(C,stateid(california))))
        Example tmpm10beqjj.dlog:426: query => {[1125000count]} | answer(A,(population(B,A),const(B,stateid(maine))))
        Example tmpm10beqjj.dlog:427: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))
        Example tmpm10beqjj.dlog:428: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))
        Example tmpm10beqjj.dlog:429: query => {[Join failed syntactically: {[michigan:stateid/2,9262000count],[idaho:stateid/2,944000count],[minnesota:stateid/2,4076000count],[wisconsin:stateid/2,4700000count],[montana:stateid/2,786700count],[virginia:stateid/2,5346800count],[maryland:stateid/2,4217000count],[north carolina:stateid/2,5882000count],[iowa:stateid/2,2913000count],[texas:stateid/2,14229000count],[massachusetts:stateid/2,5737000count],[new hampshire:stateid/2,920600count],[vermont:stateid/2,511500count],[north dakota:stateid/2,652700count],[illinois:stateid/2,11400000count],[arizona:stateid/2,2718000count],[indiana:stateid/2,5490000count],[west virginia:stateid/2,1950000count],[colorado:stateid/2,2889000count],[new mexico:stateid/2,1303000count],[oklahoma:stateid/2,3025000count],[ohio:stateid/2,10800000count],[washington:stateid/2,4113200count],[delaware:stateid/2,594000count],[hawaii:stateid/2,964000count],[nebraska:stateid/2,1569000count],[new jersey:stateid/2,7365000count],[new york:stateid/2,17558000count],[maine:stateid/2,1125000count],[utah:stateid/2,1461000count],[georgia:stateid/2,5463000count],[louisiana:stateid/2,4206000count],[california:stateid/2,23670000count],[tennessee:stateid/2,4591000count],[pennsylvania:stateid/2,11863000count],[missouri:stateid/2,4916000count],[south carolina:stateid/2,3121800count],[mississippi:stateid/2,2520000count],[kansas:stateid/2,2364000count],[connecticut:stateid/2,3107000count],[alaska:stateid/2,401800count],[wyoming:stateid/2,469557count],[florida:stateid/2,9746000count],[arkansas:stateid/2,2286000count],[nevada:stateid/2,800500count],[south dakota:stateid/2,690767count],[kentucky:stateid/2,2364000count],[oregon:stateid/2,2633000count],[district of columbia:stateid/2,638000count],[alabama:stateid/2,3894000count],[rhode island:stateid/2,947200count]}:{[stateid/2,count]}[0,1] and {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,cityid/3],[riverid/2,countryid/2]}[1,0] => {}:error]} | answer(A,count(B,(river(B),loc(B,C),most(C,D,(state(C),population(C,D),traverse(D,C)))),A))
        Example tmpm10beqjj.dlog:430: query => {[dakota:riverid/2],[little missouri:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid('south dakota'))))
        Example tmpm10beqjj.dlog:431: query => {[1.85e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid(wyoming))))
        Example tmpm10beqjj.dlog:432: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmpm10beqjj.dlog:433: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:434: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))
        Example tmpm10beqjj.dlog:435: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpm10beqjj.dlog:436: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))
        Example tmpm10beqjj.dlog:437: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmpm10beqjj.dlog:438: query => {[gila:riverid/2],[washita:riverid/2],[pecos:riverid/2],[arkansas:riverid/2],[cimarron:riverid/2],[white:riverid/2],[rio grande:riverid/2],[mississippi:riverid/2],[pearl:riverid/2],[canadian:riverid/2],[red:riverid/2],[neosho:riverid/2],[ouachita:riverid/2],[san juan:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpm10beqjj.dlog:439: query => {[kentucky:stateid/2],[indiana:stateid/2],[pennsylvania:stateid/2],[illinois:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,riverid(ohio))))
        Example tmpm10beqjj.dlog:440: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:441: query => {[6194length]} | answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))
        Example tmpm10beqjj.dlog:442: query => {[centerville:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(delaware)))))
        Example tmpm10beqjj.dlog:443: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(mississippi)))))
        Example tmpm10beqjj.dlog:444: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(dallas,_)),loc(B,A)))
        Example tmpm10beqjj.dlog:445: query => {[new orleans:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))
        Example tmpm10beqjj.dlog:446: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))
        Example tmpm10beqjj.dlog:447: query => {[new orleans_la:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(louisiana)))))
        Example tmpm10beqjj.dlog:448: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B),loc(A,C),const(C,countryid(usa)))))
        Example tmpm10beqjj.dlog:449: query => {[chattahoochee:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(florida)))))
        Example tmpm10beqjj.dlog:450: query => {[2718000count]} | answer(A,(population(B,A),const(B,stateid(arizona))))
        Example tmpm10beqjj.dlog:451: query => {[washington_dc:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))
        Example tmpm10beqjj.dlog:452: query => {[401800count]} | answer(A,(population(B,A),const(B,stateid(alaska))))
        Example tmpm10beqjj.dlog:453: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:454: query => {[bristol township_pa:cityid/3],[bethlehem_pa:cityid/3],[scranton_pa:cityid/3],[penn hills_pa:cityid/3],[reading_pa:cityid/3],[altoona_pa:cityid/3],[abingdon_pa:cityid/3],[erie_pa:cityid/3],[allentown_pa:cityid/3],[upper darby_pa:cityid/3],[lower merion_pa:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpm10beqjj.dlog:455: query => {} | answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))
        Example tmpm10beqjj.dlog:456: query => {[georgia:stateid/2]} | answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(atlanta,_))))
        Example tmpm10beqjj.dlog:457: query => {[indiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('fort wayne',_))))
        Example tmpm10beqjj.dlog:458: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpm10beqjj.dlog:459: query => {[Join failed syntactically: {[texas,texas:stateid/2,texas:stateid/2,washita:riverid/2],[texas,texas:stateid/2,texas:stateid/2,irving_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mesquite_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,corpus christi_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,grand prairie_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,red:riverid/2],[texas,texas:stateid/2,texas:stateid/2,arlington_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,beaumont_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,brownsville_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,longview_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,waco_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,guadalupe peak:placeid/2],[texas,texas:stateid/2,texas:stateid/2,lubbock_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,gulf of mexico:placeid/2],[texas,texas:stateid/2,texas:stateid/2,pasadena_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,dallas_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,fort worth_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,el paso_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,odessa_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,port arthur_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,canadian:riverid/2],[texas,texas:stateid/2,texas:stateid/2,richardson_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,abilene_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,laredo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,tyler_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,garland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,wichita falls_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,pecos:riverid/2],[texas,texas:stateid/2,texas:stateid/2,midland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,plano_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,austin_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,amarillo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mcallen_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,san angelo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,houston_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,rio grande:riverid/2],[texas,texas:stateid/2,texas:stateid/2,san antonio_tx:cityid/3]}:{[rank,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,lakeid/2],[money/time_duration,stateid/2,stateid/2,placeid/2],[name,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,riverid/2],[length,stateid/2,stateid/2,cityid/3],[date,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,mountainid/2],[count,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,mountainid/2],[money/time_duration,stateid/2,stateid/2,cityid/3],[date_month,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,placeid/2],[time_duration,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,riverid/2],[count/length^2,stateid/2,stateid/2,lakeid/2],[date_year,stateid/2,stateid/2,placeid/2],[frac,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,cityid/3],[length^2,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,placeid/2],[date_month,stateid/2,stateid/2,mountainid/2],[rank,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,cityid/3],[rank,stateid/2,stateid/2,cityid/3],[money/time_duration,stateid/2,stateid/2,riverid/2],[date_day,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,lakeid/2],[count,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,riverid/2],[rank,stateid/2,stateid/2,lakeid/2],[frac,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,placeid/2],[count/length^2,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,riverid/2],[count,stateid/2,stateid/2,lakeid/2],[money,stateid/2,stateid/2,placeid/2],[date_year,stateid/2,stateid/2,mountainid/2],[length^2,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,mountainid/2],[length,stateid/2,stateid/2,lakeid/2],[length,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,placeid/2],[length^2,stateid/2,stateid/2,lakeid/2],[date_time,stateid/2,stateid/2,lakeid/2],[date_day,stateid/2,stateid/2,riverid/2],[frac,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,placeid/2],[rank,stateid/2,stateid/2,mountainid/2],[date_day,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,mountainid/2],[time_duration,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,lakeid/2],[count/length^2,stateid/2,stateid/2,placeid/2]}[3] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpm10beqjj.dlog:460: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:461: query => {[schenectady_ny:cityid/3],[utica_ny:cityid/3],[cheektowaga_ny:cityid/3],[mount vernon_ny:cityid/3],[niagara falls_ny:cityid/3],[levittown_ny:cityid/3],[albany_ny:cityid/3],[new rochelle_ny:cityid/3],[irondequoit_ny:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new york'))))
        Example tmpm10beqjj.dlog:462: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:463: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpm10beqjj.dlog:464: query => {[usa:countryid/2],[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(springfield,_))))
        Example tmpm10beqjj.dlog:465: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpm10beqjj.dlog:466: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpm10beqjj.dlog:467: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpm10beqjj.dlog:468: query => {[new york_ny:cityid/3]} | answer(A,largest(B,(city(A),population(A,B))))
        Example tmpm10beqjj.dlog:469: query => {[1.38e-04count/length^2]} | answer(A,(density(B,A),const(B,stateid('new york'))))
        Example tmpm10beqjj.dlog:470: query => {[Join failed syntactically: {[4396length,massive:mountainid/2],[4354length,lincoln:mountainid/2],[1516length,black mesa:placeid/2],[4342length,white:mountainid/2],[1482length,spruce knob:placeid/2],[177length,lake michigan:placeid/2],[1231length,mount sunflower:placeid/2],[4399length,mount elbert:placeid/2],[105length,walton county:placeid/2],[2037length,mount mitchell:placeid/2],[216length,snake river:placeid/2],[21length,colorado river:placeid/2],[4341length,north palisade:mountainid/2],[6194length,mount mckinley:placeid/2],[2025length,clingmans dome:placeid/2],[4370length,la plata:mountainid/2],[3424length,mount hood:placeid/2],[4349length,grays:mountainid/2],[0length,potomac river:placeid/2],[4327length,yale:mountainid/2],[87length,little river:placeid/2],[4439length,alverstone:mountainid/2],[2667length,guadalupe peak:placeid/2],[1917length,mount washington:placeid/2],[1746length,mount rogers:placeid/2],[595length,timms hill:placeid/2],[4317length,sill:mountainid/2],[383length,franklin township:placeid/2],[0length,atlantic ocean:placeid/2],[-85length,death valley:placeid/2],[4996length,blackburn:mountainid/2],[1606length,mount katahdin:placeid/2],[125length,tenleytown:placeid/2],[1024length,backbone mountain:placeid/2],[1263length,black mountain:placeid/2],[1339length,mount mansfield:placeid/2],[549length,kootenai river:placeid/2],[2207length,harney peak:placeid/2],[4327length,princeton:mountainid/2],[0length,delaware river:placeid/2],[4766length,churchill:mountainid/2],[1085length,sassafras mountain:placeid/2],[4418length,whitney:mountainid/2],[725length,mount frissell:placeid/2],[610length,beaver dam creek:placeid/2],[229length,red river:placeid/2],[85length,mississippi river:placeid/2],[4316length,el diente:mountainid/2],[550length,high point:placeid/2],[132length,ohio river:placeid/2],[4348length,quandary:mountainid/2],[4345length,longs:mountainid/2],[183length,lake superior:placeid/2],[4395length,harvard:mountainid/2],[4123length,kings peak:placeid/2],[4327length,belford:mountainid/2],[4442length,hunter:mountainid/2],[1654length,johnson township:placeid/2],[4320length,bross:mountainid/2],[98length,ohio river:placeid/2],[4392length,rainier:mountainid/2],[4205length,mauna kea:placeid/2],[3859length,borah peak:placeid/2],[1064length,mount greylock:placeid/2],[4317length,wrangell:mountainid/2],[4577length,hubbard:mountainid/2],[4361length,uncompahgre:mountainid/2],[163length,driskill mountain:placeid/2],[55length,mississippi river:placeid/2],[1629length,mount marcy:placeid/2],[5489length,st. elias:mountainid/2],[4418length,mount whitney:placeid/2],[4317length,shasta:mountainid/2],[-1length,new orleans:placeid/2],[4349length,torreys:mountainid/2],[4372length,bianca:mountainid/2],[4357length,crestone:mountainid/2],[0length,pacific ocean:placeid/2],[6194length,mckinley:mountainid/2],[135length,centerville:placeid/2],[1458length,brasstown bald:placeid/2],[945length,belle fourche river:placeid/2],[4005length,boundary peak:placeid/2],[859length,red bluff reservoir:placeid/2],[4315length,maroon:mountainid/2],[17length,ouachita river:placeid/2],[979length,mount davis:placeid/2],[256length,southeast corner:placeid/2],[78length,mississippi river:placeid/2],[701length,eagle mountain:placeid/2],[472length,campbell hill:placeid/2],[4842length,south buttress:mountainid/2],[4337length,shavano:mountainid/2],[511length,ocheyedan mound:placeid/2],[0length,gulf of mexico:placeid/2],[4348length,evans:mountainid/2],[4011length,wheeler peak:placeid/2],[73length,potomac river:placeid/2],[5304length,foraker:mountainid/2],[29length,lake champlain:placeid/2],[207length,verdigris river:placeid/2],[3901length,granite peak:placeid/2],[246length,woodall mountain:placeid/2],[146length,mississippi river:placeid/2],[4317length,kit carson:mountainid/2],[734length,cheaha mountain:placeid/2],[5044length,bona:mountainid/2],[70length,st. francis river:placeid/2],[282length,mount davidson:placeid/2],[174length,lake erie:placeid/2],[604length,mount curwood:placeid/2],[1069length,white butte:placeid/2],[3851length,humphreys peak:placeid/2],[4490length,east buttress:mountainid/2],[4342length,wilson:mountainid/2],[247length,jerimoth hill:placeid/2],[4964length,kennedy:mountainid/2],[143length,colorado river:placeid/2],[4392length,mount rainier:placeid/2],[4785length,vancouver:mountainid/2],[540length,taum sauk mountain:placeid/2],[4349length,antero:mountainid/2],[284length,big stone lake:placeid/2],[4327length,crestone needle:mountainid/2],[376length,charles mound:placeid/2],[4399length,elbert:mountainid/2],[0length,long island sound:placeid/2],[4429length,browne tower:mountainid/2],[4202length,gannett peak:placeid/2],[839length,magazine mountain:placeid/2],[1021length,arkansas river:placeid/2],[4382length,williamson:mountainid/2],[4949length,sanford:mountainid/2],[4663length,fairweather:mountainid/2],[4348length,castle:mountainid/2],[4520length,bear:mountainid/2]}:{[length,mountainid/2],[length,placeid/2]}[1] and {..}:{[date,date,cityid/3],[money,money,cityid/3],[length,length,cityid/3],[count/length^2,count/length^2,cityid/3],[money/time_duration,money/time_duration,cityid/3],[date_month,date_month,cityid/3],[time_duration,time_duration,cityid/3],[frac,frac,cityid/3],[name,name,cityid/3],[rank,rank,cityid/3],[date_year,date_year,cityid/3],[date_day,date_day,cityid/3],[date_time,date_time,cityid/3],[count,count,cityid/3],[length^2,length^2,cityid/3]}[2] => {}:error]} | answer(A,(elevation(B,A),const(B,cityid('fort wayne',_))))
        Example tmpm10beqjj.dlog:471: query => {[947200count]} | answer(A,(population(B,A),const(B,stateid('rhode island'))))
        Example tmpm10beqjj.dlog:472: query => {[magazine mountain:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(arkansas)))))
        Example tmpm10beqjj.dlog:473: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande')),river(B)))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:474: query => {[district of columbia:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B))))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:475: query => {[new york:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B),traverse(B,A))))
        Example tmpm10beqjj.dlog:476: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:477: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmpm10beqjj.dlog:478: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:479: query => {[new mexico:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmpm10beqjj.dlog:480: query => {[providence_ri:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid('rhode island')))))
        Example tmpm10beqjj.dlog:481: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example tmpm10beqjj.dlog:482: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpm10beqjj.dlog:483: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:484: query => {[Join failed syntactically: {[san angelo_tx:cityid/3],[guadalupe peak:placeid/2],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[washita:riverid/2],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[pecos:riverid/2],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[gulf of mexico:placeid/2],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[rio grande:riverid/2],[odessa_tx:cityid/3],[canadian:riverid/2],[dallas_tx:cityid/3],[red:riverid/2],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]}:{[placeid/2],[lakeid/2],[cityid/3],[mountainid/2],[riverid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(river(A),traverse(A,B),state(B),loc(B,C),const(C,stateid(texas))))
        Example tmpm10beqjj.dlog:485: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpm10beqjj.dlog:486: query => {} | answer(A,longest(A,(river(A),loc(A,B),largest(B,state(B)))))
        Example tmpm10beqjj.dlog:487: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpm10beqjj.dlog:488: query => {[boston_ma:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),capital(B,cityid(boston,_))))
        Example tmpm10beqjj.dlog:489: query => {[3968000length]} | answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpm10beqjj.dlog:490: query => {[5count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(illinois))),A))
        Example tmpm10beqjj.dlog:491: query => {[boundary peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))
        Example tmpm10beqjj.dlog:492: query => {[minnesota:stateid/2],[new york:stateid/2]} | answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))
        Example tmpm10beqjj.dlog:493: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpm10beqjj.dlog:494: query => {[1.68e+10length^2]} | answer(A,(area(B,A),const(B,stateid(hawaii))))
        Example tmpm10beqjj.dlog:495: query => {[chattahoochee:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,stateid(georgia)))))))
        Example tmpm10beqjj.dlog:496: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,river(B)),traverse(B,A)))
        Example tmpm10beqjj.dlog:497: query => {[51count]} | answer(A,count(B,(state(B),const(C,countryid(usa)),loc(B,A)),A))
        Example tmpm10beqjj.dlog:498: query => {[401800count]} | answer(A,(population(B,A),largest(C,(state(B),loc(C,B),place(C),loc(C,D),const(D,countryid(usa))))))
        Example tmpm10beqjj.dlog:499: query => {[Join failed syntactically: {[maryland:stateid/2]}:{[stateid/2]}[0] and {[backbone mountain:placeid/2,1024length],[centerville:placeid/2,135length],[big stone lake:placeid/2,284length],[hunter:mountainid/2,4442length],[taum sauk mountain:placeid/2,540length],[belle fourche river:placeid/2,945length],[rainier:mountainid/2,4392length],[el diente:mountainid/2,4316length],[lincoln:mountainid/2,4354length],[crestone needle:mountainid/2,4327length],[foraker:mountainid/2,5304length],[mount whitney:placeid/2,4418length],[fairweather:mountainid/2,4663length],[mount katahdin:placeid/2,1606length],[beaver dam creek:placeid/2,610length],[east buttress:mountainid/2,4490length],[kit carson:mountainid/2,4317length],[torreys:mountainid/2,4349length],[long island sound:placeid/2,0length],[southeast corner:placeid/2,256length],[elbert:mountainid/2,4399length],[woodall mountain:placeid/2,246length],[mount rainier:placeid/2,4392length],[uncompahgre:mountainid/2,4361length],[antero:mountainid/2,4349length],[shavano:mountainid/2,4337length],[clingmans dome:placeid/2,2025length],[colorado river:placeid/2,143length],[white:mountainid/2,4342length],[sill:mountainid/2,4317length],[campbell hill:placeid/2,472length],[magazine mountain:placeid/2,839length],[tenleytown:placeid/2,125length],[eagle mountain:placeid/2,701length],[north palisade:mountainid/2,4341length],[high point:placeid/2,550length],[arkansas river:placeid/2,1021length],[evans:mountainid/2,4348length],[sanford:mountainid/2,4949length],[black mesa:placeid/2,1516length],[sassafras mountain:placeid/2,1085length],[yale:mountainid/2,4327length],[verdigris river:placeid/2,207length],[mount davidson:placeid/2,282length],[mount frissell:placeid/2,725length],[potomac river:placeid/2,0length],[wheeler peak:placeid/2,4011length],[bianca:mountainid/2,4372length],[whitney:mountainid/2,4418length],[ohio river:placeid/2,98length],[charles mound:placeid/2,376length],[castle:mountainid/2,4348length],[death valley:placeid/2,-85length],[mount washington:placeid/2,1917length],[potomac river:placeid/2,73length],[spruce knob:placeid/2,1482length],[mount davis:placeid/2,979length],[little river:placeid/2,87length],[mississippi river:placeid/2,78length],[quandary:mountainid/2,4348length],[st. elias:mountainid/2,5489length],[wrangell:mountainid/2,4317length],[mount rogers:placeid/2,1746length],[atlantic ocean:placeid/2,0length],[lake superior:placeid/2,183length],[brasstown bald:placeid/2,1458length],[bona:mountainid/2,5044length],[alverstone:mountainid/2,4439length],[ohio river:placeid/2,132length],[gannett peak:placeid/2,4202length],[mount hood:placeid/2,3424length],[longs:mountainid/2,4345length],[mississippi river:placeid/2,146length],[mount sunflower:placeid/2,1231length],[mississippi river:placeid/2,85length],[gulf of mexico:placeid/2,0length],[mckinley:mountainid/2,6194length],[black mountain:placeid/2,1263length],[franklin township:placeid/2,383length],[ocheyedan mound:placeid/2,511length],[granite peak:placeid/2,3901length],[driskill mountain:placeid/2,163length],[guadalupe peak:placeid/2,2667length],[mississippi river:placeid/2,55length],[timms hill:placeid/2,595length],[jerimoth hill:placeid/2,247length],[crestone:mountainid/2,4357length],[mauna kea:placeid/2,4205length],[shasta:mountainid/2,4317length],[lake erie:placeid/2,174length],[red river:placeid/2,229length],[williamson:mountainid/2,4382length],[kootenai river:placeid/2,549length],[bross:mountainid/2,4320length],[massive:mountainid/2,4396length],[mount mckinley:placeid/2,6194length],[princeton:mountainid/2,4327length],[grays:mountainid/2,4349length],[walton county:placeid/2,105length],[colorado river:placeid/2,21length],[borah peak:placeid/2,3859length],[johnson township:placeid/2,1654length],[mount mitchell:placeid/2,2037length],[blackburn:mountainid/2,4996length],[vancouver:mountainid/2,4785length],[wilson:mountainid/2,4342length],[white butte:placeid/2,1069length],[bear:mountainid/2,4520length],[cheaha mountain:placeid/2,734length],[kings peak:placeid/2,4123length],[mount marcy:placeid/2,1629length],[la plata:mountainid/2,4370length],[mount elbert:placeid/2,4399length],[red bluff reservoir:placeid/2,859length],[belford:mountainid/2,4327length],[humphreys peak:placeid/2,3851length],[new orleans:placeid/2,-1length],[hubbard:mountainid/2,4577length],[browne tower:mountainid/2,4429length],[harvard:mountainid/2,4395length],[maroon:mountainid/2,4315length],[delaware river:placeid/2,0length],[snake river:placeid/2,216length],[lake champlain:placeid/2,29length],[mount mansfield:placeid/2,1339length],[kennedy:mountainid/2,4964length],[mount greylock:placeid/2,1064length],[pacific ocean:placeid/2,0length],[st. francis river:placeid/2,70length],[mount curwood:placeid/2,604length],[lake michigan:placeid/2,177length],[boundary peak:placeid/2,4005length],[south buttress:mountainid/2,4842length],[ouachita river:placeid/2,17length],[churchill:mountainid/2,4766length],[harney peak:placeid/2,2207length]}:{[mountainid/2,length],[placeid/2,length]}[0] => {}:error]} | answer(A,(elevation(B,A),const(B,stateid(maryland))))
        Example tmpm10beqjj.dlog:500: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:501: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:502: query => {[huntsville_al:cityid/3],[tuscaloosa_al:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(alabama))))
        Example tmpm10beqjj.dlog:503: query => {[oklahoma:stateid/2]} | answer(A,smallest(A,(state(A),next_to(B,A),most(B,C,(state(B),next_to(B,C))))))
        Example tmpm10beqjj.dlog:504: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:505: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:506: query => {[2.62e-07count/length^2]} | answer(A,(density(B,A),largest(B,state(B))))
        Example tmpm10beqjj.dlog:507: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpm10beqjj.dlog:508: query => {[ohio:stateid/2]} | answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))
        Example tmpm10beqjj.dlog:509: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpm10beqjj.dlog:510: query => {} | answer(A,(major(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpm10beqjj.dlog:511: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpm10beqjj.dlog:512: query => {[alabama:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[north carolina:stateid/2],[florida:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))
        Example tmpm10beqjj.dlog:513: query => {[8count]} | answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))
        Example tmpm10beqjj.dlog:514: query => {[6037count]} | answer(A,(population(B,A),const(B,cityid('scotts valley',_))))
        Example tmpm10beqjj.dlog:515: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpm10beqjj.dlog:516: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:517: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,place(C))))
        Example tmpm10beqjj.dlog:518: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C)))))
        Example tmpm10beqjj.dlog:519: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmpm10beqjj.dlog:520: query => {} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(hawaii)))))
        Example tmpm10beqjj.dlog:521: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande')),river(B)))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:522: query => {[concord_nh:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid('new hampshire'))))
        Example tmpm10beqjj.dlog:523: query => {[chattahoochee:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),capital(C),const(C,cityid(atlanta,_))))
        Example tmpm10beqjj.dlog:524: query => {[67042count],[94201count],[61195count],[71462count],[138857count],[70525count],[90027count],[149230count],[70508count],[62762count],[98315count],[109943count],[91449count],[112560count],[118102count],[72496count],[84997count],[72331count],[67053count],[101261count],[73240count]} | answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(texas))))
        Example tmpm10beqjj.dlog:525: query => {[denver_co:cityid/3]} | answer(A,(capital(A),loc(A,B),most(B,C,(state(B),traverse(C,B)))))
        Example tmpm10beqjj.dlog:526: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmpm10beqjj.dlog:527: query => {[345496count]} | answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(texas))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpm10beqjj.dlog:530: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpm10beqjj.dlog:531: query => {[los angeles_ca:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))
        Example tmpm10beqjj.dlog:532: query => {[michigan:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))
        Example tmpm10beqjj.dlog:533: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:534: query => {[105length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(florida))))))
        Example tmpm10beqjj.dlog:535: query => {[tennessee:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),river(B))))
        Example tmpm10beqjj.dlog:536: query => {[6.91e+11length^2]} | answer(A,(area(B,A),state(B),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:537: query => {[bristol township_pa:cityid/3],[bethlehem_pa:cityid/3],[scranton_pa:cityid/3],[penn hills_pa:cityid/3],[reading_pa:cityid/3],[altoona_pa:cityid/3],[abingdon_pa:cityid/3],[erie_pa:cityid/3],[allentown_pa:cityid/3],[upper darby_pa:cityid/3],[lower merion_pa:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpm10beqjj.dlog:538: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpm10beqjj.dlog:539: query => {[new mexico:stateid/2],[usa:countryid/2],[texas:stateid/2],[colorado:stateid/2]} | answer(A,(loc(B,A),const(B,riverid('rio grande')),river(B)))
        Example tmpm10beqjj.dlog:540: query => {[4076000count]} | answer(A,(population(B,A),const(B,stateid(minnesota))))
        Example FAILED TO PARSE
        Example tmpm10beqjj.dlog:541: query => {[utah:stateid/2],[oregon:stateid/2],[idaho:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(nevada))))
        Example tmpm10beqjj.dlog:542: query => {[lake michigan:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpm10beqjj.dlog:543: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpm10beqjj.dlog:544: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpm10beqjj.dlog:545: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpm10beqjj.dlog:546: query => {[seattle_wa:cityid/3]} | answer(A,largest(B,(city(A),density(A,B))))
        Example tmpm10beqjj.dlog:547: query => {[1.45e+11length^2]} | answer(A,(area(B,A),const(B,stateid(wisconsin))))
        Example tmpm10beqjj.dlog:548: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmpm10beqjj.dlog:549: query => {[4076000count]} | answer(A,(population(B,A),const(B,stateid(minnesota))))
        Example tmpm10beqjj.dlog:550: query => {} | answer(A,(density(B,A),state(B),loc(C,B),capital(C),high_point(B,C)))
      } [1.5s, cum. 3.3s]
    } [3.3s, cum. 3.3s]
    Randomly splitting 547 general examples
    383 training examples, 164 test examples
  } [3.3s, cum. 3.4s]
  Execution directory: /Users/jakeimyak/Desktop/CSE5525/hw3-distrib/state/execs/72.exec
} [3.4s]
